digraph graphname {
n78384 [shape=box,label="(78384)"];
n78383 [shape=box,label="(78383)"];
n78382 [shape=box,label="(78382)"];
n78381 [shape=box,label="(78381)"];
n78380 [shape=box,label="(78380)\nbreak"];
n78379 [shape=box,label="(78379)\ntextIndex = textIndex + 1"];
n78378 [shape=box,label="(78378)"];
n78378 -> n78379[style="dashed",color="gray",label="sub"];
n78378 -> n78380[style="dashed",color="gray",label="next"];
n78377 [shape=box,label="(78377)\noffsetY = offsetY + maxHeightValue\nmaxAscent = 0.0\nmaxHeightValue = 0.0\nlineIndex = lineIndex + 1\noffsetX = 2"];
n78376 [shape=box,label="(78376)"];
n78375 [shape=box,label="(78375)\nlg.ascent = maxAscent\nlg.height = maxHeightValue"];
n78374 [shape=box,label="(78374)\nbreak"];
n78373 [shape=box,label="(78373)\nvar _hx_tmp = lg.lineIndex > lineIndex\n@:cond-branch _hx_tmp"];
n78373 -> n78374[style="dashed",color="gray",label="then"];
n78373 -> n78375[style="dashed",color="gray",label="next"];
n78372 [shape=box,label="(78372)\ncontinue"];
n78371 [shape=box,label="(78371)\nvar lg = cast `1.get(`)\n` = ` + 1\nvar _hx_tmp = lg.lineIndex < lineIndex\n@:cond-branch _hx_tmp"];
n78371 -> n78372[style="dashed",color="gray",label="then"];
n78371 -> n78373[style="dashed",color="gray",label="next"];
n78370 [shape=box,label="(78370)\nbreak"];
n78369 [shape=box,label="(78369)\nvar _hx_tmp = `1.get_length()\nvar _hx_tmp = ! ((` < _hx_tmp))\n@:cond-branch _hx_tmp"];
n78369 -> n78370[style="dashed",color="gray",label="then"];
n78369 -> n78371[style="dashed",color="gray",label="next"];
n78368 [shape=box,label="<loop-head>
(78368)"];
n78367 [shape=box,label="(78367)\nwhile ((true)) @:block 78369"];
n78367 -> n78368[style="dashed",color="gray",label="loop-head"];
n78367 -> n78369[style="dashed",color="gray",label="loop-body"];
n78367 -> n78376[style="dashed",color="gray",label="next"];
n78366 [shape=box,label="(78366)\nvar ` = 0\nvar `1 = `this.layoutGroups"];
n78366 -> n78367[style="dashed",color="gray",label="merge"];
n78365 [shape=box,label="(78365)"];
n78365 -> n78366[style="dashed",color="gray",label="sub"];
n78365 -> n78377[style="dashed",color="gray",label="next"];
n78364 [shape=box,label="(78364)\nmaxHeightValue = heightValue"];
n78363 [shape=box,label="(78363)\nvar _hx_tmp = heightValue > maxHeightValue\n@:cond-branch _hx_tmp"];
n78363 -> n78364[style="dashed",color="gray",label="then"];
n78363 -> n78365[style="dashed",color="gray",label="next"];
n78362 [shape=box,label="(78362)\nmaxAscent = ascent"];
n78361 [shape=box,label="(78361)\nvar _hx_tmp = ascent > maxAscent\n@:cond-branch _hx_tmp"];
n78361 -> n78362[style="dashed",color="gray",label="then"];
n78361 -> n78363[style="dashed",color="gray",label="next"];
n78360 [shape=box,label="(78360)"];
n78360 -> n78361[style="dashed",color="gray",label="sub"];
n78360 -> n78378[style="dashed",color="gray",label="next"];
n78359 [shape=box,label="(78359)\nvar _hx_tmp = textIndex == formatRange.end\n@:cond-branch _hx_tmp"];
n78359 -> n78360[style="dashed",color="gray",label="then"];
n78359 -> n78381[style="dashed",color="gray",label="next"];
n78358 [shape=box,label="(78358)"];
n78357 [shape=box,label="(78357)\nmaxAscent = ascent"];
n78356 [shape=box,label="(78356)\nvar _hx_tmp = ascent > maxAscent\n@:cond-branch _hx_tmp"];
n78356 -> n78357[style="dashed",color="gray",label="then"];
n78356 -> n78358[style="dashed",color="gray",label="next"];
n78355 [shape=box,label="(78355)\nmaxHeightValue = heightValue"];
n78354 [shape=box,label="(78354)\nvar _hx_tmp = heightValue > maxHeightValue\n@:cond-branch _hx_tmp"];
n78354 -> n78355[style="dashed",color="gray",label="then"];
n78354 -> n78356[style="dashed",color="gray",label="next"];
n78353 [shape=box,label="(78353)\nleading = currentFormat.leading\nvar heightValue = ascent + descent\nheightValue = heightValue + leading"];
n78352 [shape=box,label="(78352)"];
n78351 [shape=box,label="(78351)\nascent = currentFormat.size\ndescent = currentFormat.size * 0.185"];
n78350 [shape=box,label="(78350)\nvar ascent = font.ascender / font.unitsPerEM\nascent = ascent * currentFormat.size\nvar descent = font.descender / font.unitsPerEM\nvar descent = descent * currentFormat.size\ndescent = Math.abs(descent)"];
n78349 [shape=box,label="(78349)\nvar _hx_tmp = font != null\n@:cond-branch _hx_tmp"];
n78349 -> n78350[style="dashed",color="gray",label="then"];
n78349 -> n78351[style="dashed",color="gray",label="else"];
n78349 -> n78352[style="dashed",color="gray",label="next"];
n78348 [shape=box,label="(78348)\nascent = currentFormat.size * currentFormat.__ascent\ndescent = currentFormat.size * currentFormat.__descent"];
n78347 [shape=box,label="(78347)\nvar this = `this.textFormatRanges\nformatRange = cast this.get(rangeIndex)\ncurrentFormat.__merge(formatRange.format)\nfont = openfl._internal.text.TextEngine.getFontInstance(currentFormat)\nvar _hx_tmp = currentFormat.__ascent != null\n@:cond-branch _hx_tmp"];
n78347 -> n78348[style="dashed",color="gray",label="then"];
n78347 -> n78349[style="dashed",color="gray",label="else"];
n78347 -> n78353[style="dashed",color="gray",label="next"];
n78346 [shape=box,label="(78346)\nrangeIndex = rangeIndex + 1"];
n78345 [shape=box,label="(78345)"];
n78345 -> n78346[style="dashed",color="gray",label="sub"];
n78345 -> n78347[style="dashed",color="gray",label="next"];
n78344 [shape=box,label="(78344)\nvar this = `this.textFormatRanges\nvar _hx_tmp = cast this.get_length()\nvar _hx_tmp = _hx_tmp - 1\nvar _hx_tmp = rangeIndex < _hx_tmp\n@:cond-branch _hx_tmp"];
n78344 -> n78345[style="dashed",color="gray",label="then"];
n78344 -> n78354[style="dashed",color="gray",label="next"];
n78343 [shape=box,label="(78343)"];
n78343 -> n78344[style="dashed",color="gray",label="sub"];
n78343 -> n78359[style="dashed",color="gray",label="next"];
n78342 [shape=box,label="(78342)"];
n78341 [shape=box,label="(78341)\nvar _hx_tmp = width\nlayoutGroup.width = _hx_tmp\nlayoutGroup.height = heightValue\noffsetX = offsetX + widthValue\ntextIndex = formatRange.end"];
n78340 [shape=box,label="(78340)"];
n78339 [shape=box,label="(78339)\nvar position = positions[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n78338 [shape=box,label="(78338)\nbreak"];
n78337 [shape=box,label="(78337)\nvar _hx_tmp = ! ((` < positions.length))\n@:cond-branch _hx_tmp"];
n78337 -> n78338[style="dashed",color="gray",label="then"];
n78337 -> n78339[style="dashed",color="gray",label="next"];
n78336 [shape=box,label="<loop-head>
(78336)"];
n78335 [shape=box,label="(78335)\nwhile ((true)) @:block 78337"];
n78335 -> n78336[style="dashed",color="gray",label="loop-head"];
n78335 -> n78337[style="dashed",color="gray",label="loop-body"];
n78335 -> n78340[style="dashed",color="gray",label="next"];
n78334 [shape=box,label="(78334)\nvar ` = 0"];
n78334 -> n78335[style="dashed",color="gray",label="merge"];
n78333 [shape=box,label="(78333)\nvar `this = `this.__textLayout\nvar _hx_tmp = lime.text._UTF8String.UTF8String_Impl_.substring(text, textIndex, endIndex)\n`this.set_text(_hx_tmp)\nvar _hx_tmp = `this.__textLayout.get_positions()\nlayoutGroup.positions = _hx_tmp\nlayoutGroup.offsetX = offsetX\nlayoutGroup.ascent = ascent\nlayoutGroup.descent = descent\nlayoutGroup.leading = leading\nlayoutGroup.lineIndex = lineIndex\nlayoutGroup.offsetY = offsetY\nvar positions = layoutGroup.positions\nvar width = 0.0"];
n78333 -> n78334[style="dashed",color="gray",label="sub"];
n78333 -> n78341[style="dashed",color="gray",label="next"];
n78332 [shape=box,label="(78332)\n`this.__textLayout.set_size(formatRange.format.size)"];
n78331 [shape=box,label="(78331)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar _hx_tmp = formatRange.format.size != null\n@:cond-branch _hx_tmp"];
n78331 -> n78332[style="dashed",color="gray",label="then"];
n78331 -> n78333[style="dashed",color="gray",label="next"];
n78330 [shape=box,label="(78330)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n78329 [shape=box,label="(78329)\nvar text = this.text\nvar endIndex = formatRange.end\nvar _hx_tmp = `this.__textLayout == null\n@:cond-branch _hx_tmp"];
n78329 -> n78330[style="dashed",color="gray",label="then"];
n78329 -> n78331[style="dashed",color="gray",label="next"];
n78328 [shape=box,label="(78328)"];
n78327 [shape=box,label="(78327)"];
n78326 [shape=box,label="(78326)\nvar this = `this.layoutGroups\ncast this.push(layoutGroup)"];
n78325 [shape=box,label="(78325)\nlayoutGroup.format = formatRange.format\nlayoutGroup.startIndex = textIndex\nlayoutGroup.endIndex = endIndex"];
n78324 [shape=box,label="(78324)\nlayoutGroup = new openfl._internal.text.TextLayoutGroup(formatRange.format, textIndex, endIndex)"];
n78324 -> n78326[style="dashed",color="gray",label="sub"];
n78324 -> n78327[style="dashed",color="gray",label="next"];
n78323 [shape=box,label="(78323)\n@:cond-branch _hx_tmp"];
n78323 -> n78324[style="dashed",color="gray",label="then"];
n78323 -> n78325[style="dashed",color="gray",label="else"];
n78323 -> n78328[style="dashed",color="gray",label="next"];
n78322 [shape=box,label="(78322)\n_hx_tmp = true"];
n78321 [shape=box,label="(78321)\n_hx_tmp = layoutGroup.startIndex != layoutGroup.endIndex"];
n78320 [shape=box,label="(78320)\nvar endIndex = formatRange.end\nvar _hx_tmp\nvar _hx_tmp = ! layoutGroup == null\n@:cond-branch _hx_tmp"];
n78320 -> n78321[style="dashed",color="gray",label="then"];
n78320 -> n78322[style="dashed",color="gray",label="else"];
n78320 -> n78323[style="dashed",color="gray",label="next"];
n78319 [shape=box,label="(78319)\nwidthValue = width"];
n78319 -> n78320[style="dashed",color="gray",label="sub"];
n78319 -> n78329[style="dashed",color="gray",label="next"];
n78318 [shape=box,label="(78318)"];
n78317 [shape=box,label="(78317)\nvar position = positions[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n78316 [shape=box,label="(78316)\nbreak"];
n78315 [shape=box,label="(78315)\nvar widthValue = ! ((` < positions.length))\n@:cond-branch widthValue"];
n78315 -> n78316[style="dashed",color="gray",label="then"];
n78315 -> n78317[style="dashed",color="gray",label="next"];
n78314 [shape=box,label="<loop-head>
(78314)"];
n78313 [shape=box,label="(78313)\nwhile ((true)) @:block 78315"];
n78313 -> n78314[style="dashed",color="gray",label="loop-head"];
n78313 -> n78315[style="dashed",color="gray",label="loop-body"];
n78313 -> n78318[style="dashed",color="gray",label="next"];
n78312 [shape=box,label="(78312)\nvar ` = 0"];
n78312 -> n78313[style="dashed",color="gray",label="merge"];
n78311 [shape=box,label="(78311)\nvar `this = `this.__textLayout\nvar positions = lime.text._UTF8String.UTF8String_Impl_.substring(text, textIndex, endIndex)\n`this.set_text(positions)\npositions = `this.__textLayout.get_positions()\nvar width = 0.0"];
n78311 -> n78312[style="dashed",color="gray",label="sub"];
n78311 -> n78319[style="dashed",color="gray",label="next"];
n78310 [shape=box,label="(78310)\n`this.__textLayout.set_size(formatRange.format.size)"];
n78309 [shape=box,label="(78309)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar positions = formatRange.format.size != null\n@:cond-branch positions"];
n78309 -> n78310[style="dashed",color="gray",label="then"];
n78309 -> n78311[style="dashed",color="gray",label="next"];
n78308 [shape=box,label="(78308)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n78307 [shape=box,label="(78307)\nvar text = this.text\nvar endIndex = formatRange.end\nvar positions = `this.__textLayout == null\n@:cond-branch positions"];
n78307 -> n78308[style="dashed",color="gray",label="then"];
n78307 -> n78309[style="dashed",color="gray",label="next"];
n78306 [shape=box,label="(78306)"];
n78305 [shape=box,label="(78305)"];
n78304 [shape=box,label="(78304)\nwidthValue = width\ntempWidth = widthValue"];
n78303 [shape=box,label="(78303)"];
n78302 [shape=box,label="(78302)\nvar position = positions[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n78301 [shape=box,label="(78301)\nbreak"];
n78300 [shape=box,label="(78300)\nvar widthValue = ! ((` < positions.length))\n@:cond-branch widthValue"];
n78300 -> n78301[style="dashed",color="gray",label="then"];
n78300 -> n78302[style="dashed",color="gray",label="next"];
n78299 [shape=box,label="<loop-head>
(78299)"];
n78298 [shape=box,label="(78298)\nwhile ((true)) @:block 78300"];
n78298 -> n78299[style="dashed",color="gray",label="loop-head"];
n78298 -> n78300[style="dashed",color="gray",label="loop-body"];
n78298 -> n78303[style="dashed",color="gray",label="next"];
n78297 [shape=box,label="(78297)\nvar ` = 0"];
n78297 -> n78298[style="dashed",color="gray",label="merge"];
n78296 [shape=box,label="(78296)\nvar `this = `this.__textLayout\nvar positions = lime.text._UTF8String.UTF8String_Impl_.substring(text, textIndex, endIndex)\n`this.set_text(positions)\npositions = `this.__textLayout.get_positions()\nvar width = 0.0"];
n78296 -> n78297[style="dashed",color="gray",label="sub"];
n78296 -> n78304[style="dashed",color="gray",label="next"];
n78295 [shape=box,label="(78295)\n`this.__textLayout.set_size(formatRange.format.size)"];
n78294 [shape=box,label="(78294)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar positions = formatRange.format.size != null\n@:cond-branch positions"];
n78294 -> n78295[style="dashed",color="gray",label="then"];
n78294 -> n78296[style="dashed",color="gray",label="next"];
n78293 [shape=box,label="(78293)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n78292 [shape=box,label="(78292)\ntextIndex = textIndex + i\nvar text = `this.text\nvar positions = `this.__textLayout == null\n@:cond-branch positions"];
n78292 -> n78293[style="dashed",color="gray",label="then"];
n78292 -> n78294[style="dashed",color="gray",label="next"];
n78291 [shape=box,label="(78291)\noffsetY = offsetY + maxHeightValue\nmaxAscent = 0.0\nmaxHeightValue = 0.0\nlineIndex = lineIndex + 1\noffsetX = 2"];
n78290 [shape=box,label="(78290)"];
n78289 [shape=box,label="(78289)\nlg.ascent = maxAscent\nlg.height = maxHeightValue"];
n78288 [shape=box,label="(78288)\nbreak"];
n78287 [shape=box,label="(78287)\nvar _hx_tmp = lg.lineIndex > lineIndex\n@:cond-branch _hx_tmp"];
n78287 -> n78288[style="dashed",color="gray",label="then"];
n78287 -> n78289[style="dashed",color="gray",label="next"];
n78286 [shape=box,label="(78286)\ncontinue"];
n78285 [shape=box,label="(78285)\nvar lg = cast `1.get(`)\n` = ` + 1\nvar _hx_tmp = lg.lineIndex < lineIndex\n@:cond-branch _hx_tmp"];
n78285 -> n78286[style="dashed",color="gray",label="then"];
n78285 -> n78287[style="dashed",color="gray",label="next"];
n78284 [shape=box,label="(78284)\nbreak"];
n78283 [shape=box,label="(78283)\nvar _hx_tmp = `1.get_length()\nvar _hx_tmp = ! ((` < _hx_tmp))\n@:cond-branch _hx_tmp"];
n78283 -> n78284[style="dashed",color="gray",label="then"];
n78283 -> n78285[style="dashed",color="gray",label="next"];
n78282 [shape=box,label="<loop-head>
(78282)"];
n78281 [shape=box,label="(78281)\nwhile ((true)) @:block 78283"];
n78281 -> n78282[style="dashed",color="gray",label="loop-head"];
n78281 -> n78283[style="dashed",color="gray",label="loop-body"];
n78281 -> n78290[style="dashed",color="gray",label="next"];
n78280 [shape=box,label="(78280)\nvar ` = 0\nvar `1 = `this.layoutGroups"];
n78280 -> n78281[style="dashed",color="gray",label="merge"];
n78279 [shape=box,label="(78279)"];
n78279 -> n78280[style="dashed",color="gray",label="sub"];
n78279 -> n78291[style="dashed",color="gray",label="next"];
n78278 [shape=box,label="(78278)\nmaxHeightValue = heightValue"];
n78277 [shape=box,label="(78277)\nvar _hx_tmp = heightValue > maxHeightValue\n@:cond-branch _hx_tmp"];
n78277 -> n78278[style="dashed",color="gray",label="then"];
n78277 -> n78279[style="dashed",color="gray",label="next"];
n78276 [shape=box,label="(78276)\nmaxAscent = ascent"];
n78275 [shape=box,label="(78275)\nvar _hx_tmp = ascent > maxAscent\n@:cond-branch _hx_tmp"];
n78275 -> n78276[style="dashed",color="gray",label="then"];
n78275 -> n78277[style="dashed",color="gray",label="next"];
n78274 [shape=box,label="(78274)\nvar _hx_tmp = width\nlayoutGroup.width = _hx_tmp\nlayoutGroup.height = heightValue\nlayoutGroup = null"];
n78274 -> n78275[style="dashed",color="gray",label="sub"];
n78274 -> n78292[style="dashed",color="gray",label="next"];
n78273 [shape=box,label="(78273)"];
n78272 [shape=box,label="(78272)\nvar position = positions[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n78271 [shape=box,label="(78271)\nbreak"];
n78270 [shape=box,label="(78270)\nvar _hx_tmp = ! ((` < positions.length))\n@:cond-branch _hx_tmp"];
n78270 -> n78271[style="dashed",color="gray",label="then"];
n78270 -> n78272[style="dashed",color="gray",label="next"];
n78269 [shape=box,label="<loop-head>
(78269)"];
n78268 [shape=box,label="(78268)\nwhile ((true)) @:block 78270"];
n78268 -> n78269[style="dashed",color="gray",label="loop-head"];
n78268 -> n78270[style="dashed",color="gray",label="loop-body"];
n78268 -> n78273[style="dashed",color="gray",label="next"];
n78267 [shape=box,label="(78267)\nvar ` = 0"];
n78267 -> n78268[style="dashed",color="gray",label="merge"];
n78266 [shape=box,label="(78266)\nvar `this = `this.__textLayout\nvar _hx_tmp = textIndex + i\nvar _hx_tmp = lime.text._UTF8String.UTF8String_Impl_.substring(text, textIndex, _hx_tmp)\n`this.set_text(_hx_tmp)\nvar _hx_tmp = `this.__textLayout.get_positions()\nlayoutGroup.positions = _hx_tmp\nlayoutGroup.offsetX = offsetX\nlayoutGroup.ascent = ascent\nlayoutGroup.descent = descent\nlayoutGroup.leading = leading\nlayoutGroup.lineIndex = lineIndex\nlayoutGroup.offsetY = offsetY\nvar positions = layoutGroup.positions\nvar width = 0.0"];
n78266 -> n78267[style="dashed",color="gray",label="sub"];
n78266 -> n78274[style="dashed",color="gray",label="next"];
n78265 [shape=box,label="(78265)\n`this.__textLayout.set_size(formatRange.format.size)"];
n78264 [shape=box,label="(78264)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar _hx_tmp = formatRange.format.size != null\n@:cond-branch _hx_tmp"];
n78264 -> n78265[style="dashed",color="gray",label="then"];
n78264 -> n78266[style="dashed",color="gray",label="next"];
n78263 [shape=box,label="(78263)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n78262 [shape=box,label="(78262)\nvar text = `this.text\nvar _hx_tmp = `this.__textLayout == null\n@:cond-branch _hx_tmp"];
n78262 -> n78263[style="dashed",color="gray",label="then"];
n78262 -> n78264[style="dashed",color="gray",label="next"];
n78261 [shape=box,label="(78261)"];
n78260 [shape=box,label="(78260)"];
n78259 [shape=box,label="(78259)\nvar this = `this.layoutGroups\ncast this.push(layoutGroup)"];
n78258 [shape=box,label="(78258)\nlayoutGroup.format = formatRange.format\nlayoutGroup.startIndex = textIndex\nlayoutGroup.endIndex = endIndex"];
n78257 [shape=box,label="(78257)\nlayoutGroup = new openfl._internal.text.TextLayoutGroup(formatRange.format, textIndex, endIndex)"];
n78257 -> n78259[style="dashed",color="gray",label="sub"];
n78257 -> n78260[style="dashed",color="gray",label="next"];
n78256 [shape=box,label="(78256)\n@:cond-branch _hx_tmp"];
n78256 -> n78257[style="dashed",color="gray",label="then"];
n78256 -> n78258[style="dashed",color="gray",label="else"];
n78256 -> n78261[style="dashed",color="gray",label="next"];
n78255 [shape=box,label="(78255)\n_hx_tmp = true"];
n78254 [shape=box,label="(78254)\n_hx_tmp = layoutGroup.startIndex != layoutGroup.endIndex"];
n78253 [shape=box,label="(78253)\nvar endIndex = textIndex + i\nvar _hx_tmp\nvar _hx_tmp = ! layoutGroup == null\n@:cond-branch _hx_tmp"];
n78253 -> n78254[style="dashed",color="gray",label="then"];
n78253 -> n78255[style="dashed",color="gray",label="else"];
n78253 -> n78256[style="dashed",color="gray",label="next"];
n78252 [shape=box,label="(78252)"];
n78252 -> n78253[style="dashed",color="gray",label="sub"];
n78252 -> n78262[style="dashed",color="gray",label="next"];
n78251 [shape=box,label="(78251)\noffsetX = 2\noffsetY = offsetY + layoutGroup.height\nlineIndex = lineIndex + 1\nbreak"];
n78250 [shape=box,label="(78250)\nvar _hx_tmp = i == 0\n@:cond-branch _hx_tmp"];
n78250 -> n78251[style="dashed",color="gray",label="then"];
n78250 -> n78252[style="dashed",color="gray",label="else"];
n78250 -> n78305[style="dashed",color="gray",label="next"];
n78249 [shape=box,label="(78249)\ni = lime.text._UTF8String.UTF8String_Impl_.get_length(`this.text)"];
n78248 [shape=box,label="(78248)\n@:cond-branch _hx_tmp"];
n78248 -> n78249[style="dashed",color="gray",label="then"];
n78248 -> n78250[style="dashed",color="gray",label="next"];
n78247 [shape=box,label="(78247)\n_hx_tmp = false"];
n78246 [shape=box,label="(78246)\nvar _hx_tmp = `this.width - 4\n_hx_tmp = tempWidth > _hx_tmp"];
n78245 [shape=box,label="(78245)\nvar _hx_tmp\nvar _hx_tmp = i == 0\n@:cond-branch _hx_tmp"];
n78245 -> n78246[style="dashed",color="gray",label="then"];
n78245 -> n78247[style="dashed",color="gray",label="else"];
n78245 -> n78248[style="dashed",color="gray",label="next"];
n78244 [shape=box,label="(78244)"];
n78243 [shape=box,label="(78243)\ni = i + 1"];
n78242 [shape=box,label="(78242)"];
n78242 -> n78243[style="dashed",color="gray",label="sub"];
n78242 -> n78244[style="dashed",color="gray",label="next"];
n78241 [shape=box,label="(78241)\nbreak"];
n78240 [shape=box,label="(78240)\ni = i - 1"];
n78239 [shape=box,label="(78239)"];
n78239 -> n78240[style="dashed",color="gray",label="sub"];
n78239 -> n78241[style="dashed",color="gray",label="next"];
n78238 [shape=box,label="(78238)\ntempWidth = width\nvar _hx_tmp = offsetX + tempWidth\nvar _hx_tmp = `this.width - 2\nvar _hx_tmp = _hx_tmp > _hx_tmp\n@:cond-branch _hx_tmp"];
n78238 -> n78239[style="dashed",color="gray",label="then"];
n78238 -> n78242[style="dashed",color="gray",label="next"];
n78237 [shape=box,label="(78237)"];
n78236 [shape=box,label="(78236)\nvar position = `1[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n78235 [shape=box,label="(78235)\nbreak"];
n78234 [shape=box,label="(78234)\nvar tempWidth = ! ((` < `1.length))\n@:cond-branch tempWidth"];
n78234 -> n78235[style="dashed",color="gray",label="then"];
n78234 -> n78236[style="dashed",color="gray",label="next"];
n78233 [shape=box,label="<loop-head>
(78233)"];
n78232 [shape=box,label="(78232)\nwhile ((true)) @:block 78234"];
n78232 -> n78233[style="dashed",color="gray",label="loop-head"];
n78232 -> n78234[style="dashed",color="gray",label="loop-body"];
n78232 -> n78237[style="dashed",color="gray",label="next"];
n78231 [shape=box,label="(78231)\nvar ` = 0\nvar `1 = `this.__textLayout.get_positions()"];
n78231 -> n78232[style="dashed",color="gray",label="merge"];
n78230 [shape=box,label="(78230)\n`this.__textLayout.set_text(text)"];
n78230 -> n78231[style="dashed",color="gray",label="sub"];
n78230 -> n78238[style="dashed",color="gray",label="next"];
n78229 [shape=box,label="(78229)\n`this.__textLayout.set_size(formatRange.format.size)"];
n78228 [shape=box,label="(78228)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar tempWidth = formatRange.format.size != null\n@:cond-branch tempWidth"];
n78228 -> n78229[style="dashed",color="gray",label="then"];
n78228 -> n78230[style="dashed",color="gray",label="next"];
n78227 [shape=box,label="(78227)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n78226 [shape=box,label="(78226)\nvar text = lime.text._UTF8String.UTF8String_Impl_.substr(`this.text, textIndex, i)\nvar tempWidth = `this.__textLayout == null\n@:cond-branch tempWidth"];
n78226 -> n78227[style="dashed",color="gray",label="then"];
n78226 -> n78228[style="dashed",color="gray",label="next"];
n78225 [shape=box,label="(78225)\nbreak"];
n78224 [shape=box,label="(78224)\nvar _hx_tmp = textIndex + i\nvar _hx_tmp = endIndex + 1\nvar _hx_tmp = ! ((_hx_tmp < _hx_tmp))\n@:cond-branch _hx_tmp"];
n78224 -> n78225[style="dashed",color="gray",label="then"];
n78224 -> n78226[style="dashed",color="gray",label="next"];
n78223 [shape=box,label="<loop-head>
(78223)"];
n78222 [shape=box,label="(78222)\nwhile ((true)) @:block 78224"];
n78222 -> n78223[style="dashed",color="gray",label="loop-head"];
n78222 -> n78224[style="dashed",color="gray",label="loop-body"];
n78222 -> n78245[style="dashed",color="gray",label="next"];
n78221 [shape=box,label="(78221)\nvar i = 1"];
n78221 -> n78222[style="dashed",color="gray",label="merge"];
n78220 [shape=box,label="(78220)\nbreak"];
n78219 [shape=box,label="(78219)\nvar _hx_tmp = offsetX + tempWidth\nvar _hx_tmp = `this.width - 2\nvar _hx_tmp = ! ((_hx_tmp > _hx_tmp))\n@:cond-branch _hx_tmp"];
n78219 -> n78220[style="dashed",color="gray",label="then"];
n78219 -> n78221[style="dashed",color="gray",label="next"];
n78218 [shape=box,label="<loop-head>
(78218)"];
n78217 [shape=box,label="(78217)\nwhile ((true)) @:block 78219"];
n78217 -> n78218[style="dashed",color="gray",label="loop-head"];
n78217 -> n78219[style="dashed",color="gray",label="loop-body"];
n78217 -> n78306[style="dashed",color="gray",label="next"];
n78216 [shape=box,label="(78216)\nvar tempWidth = width"];
n78216 -> n78217[style="dashed",color="gray",label="merge"];
n78215 [shape=box,label="(78215)"];
n78214 [shape=box,label="(78214)\nvar position = `1[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n78213 [shape=box,label="(78213)\nbreak"];
n78212 [shape=box,label="(78212)\nvar _hx_tmp = ! ((` < `1.length))\n@:cond-branch _hx_tmp"];
n78212 -> n78213[style="dashed",color="gray",label="then"];
n78212 -> n78214[style="dashed",color="gray",label="next"];
n78211 [shape=box,label="<loop-head>
(78211)"];
n78210 [shape=box,label="(78210)\nwhile ((true)) @:block 78212"];
n78210 -> n78211[style="dashed",color="gray",label="loop-head"];
n78210 -> n78212[style="dashed",color="gray",label="loop-body"];
n78210 -> n78215[style="dashed",color="gray",label="next"];
n78209 [shape=box,label="(78209)\nvar ` = 0\nvar `1 = `this.__textLayout.get_positions()"];
n78209 -> n78210[style="dashed",color="gray",label="merge"];
n78208 [shape=box,label="(78208)\n`this.__textLayout.set_text(text)"];
n78208 -> n78209[style="dashed",color="gray",label="sub"];
n78208 -> n78216[style="dashed",color="gray",label="next"];
n78207 [shape=box,label="(78207)\n`this.__textLayout.set_size(formatRange.format.size)"];
n78206 [shape=box,label="(78206)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar _hx_tmp = formatRange.format.size != null\n@:cond-branch _hx_tmp"];
n78206 -> n78207[style="dashed",color="gray",label="then"];
n78206 -> n78208[style="dashed",color="gray",label="next"];
n78205 [shape=box,label="(78205)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n78204 [shape=box,label="(78204)\nvar endIndex = formatRange.end\nvar text = lime.text._UTF8String.UTF8String_Impl_.substring(`this.text, textIndex, endIndex)\nvar _hx_tmp = `this.__textLayout == null\n@:cond-branch _hx_tmp"];
n78204 -> n78205[style="dashed",color="gray",label="then"];
n78204 -> n78206[style="dashed",color="gray",label="next"];
n78203 [shape=box,label="(78203)\n@:cond-branch _hx_tmp"];
n78203 -> n78204[style="dashed",color="gray",label="then"];
n78203 -> n78307[style="dashed",color="gray",label="next"];
n78202 [shape=box,label="(78202)\n_hx_tmp = false"];
n78201 [shape=box,label="(78201)\n_hx_tmp = this.width >= 4"];
n78200 [shape=box,label="(78200)\nvar _hx_tmp\nvar _hx_tmp = this.wordWrap\n@:cond-branch _hx_tmp"];
n78200 -> n78201[style="dashed",color="gray",label="then"];
n78200 -> n78202[style="dashed",color="gray",label="else"];
n78200 -> n78203[style="dashed",color="gray",label="next"];
n78199 [shape=box,label="(78199)\n@:cond-branch _hx_tmp"];
n78199 -> n78200[style="dashed",color="gray",label="then"];
n78199 -> n78342[style="dashed",color="gray",label="next"];
n78198 [shape=box,label="(78198)\n_hx_tmp = true"];
n78197 [shape=box,label="(78197)\nvar _hx_tmp = lime.text._UTF8String.UTF8String_Impl_.get_length(this.text)\n_hx_tmp = textIndex == _hx_tmp"];
n78196 [shape=box,label="(78196)\nvar _hx_tmp\nvar _hx_tmp = ! textIndex < formatRange.end\n@:cond-branch _hx_tmp"];
n78196 -> n78197[style="dashed",color="gray",label="then"];
n78196 -> n78198[style="dashed",color="gray",label="else"];
n78196 -> n78199[style="dashed",color="gray",label="next"];
n78195 [shape=box,label="(78195)\nbreak"];
n78194 [shape=box,label="(78194)"];
n78193 [shape=box,label="(78193)"];
n78192 [shape=box,label="(78192)\nbreak"];
n78191 [shape=box,label="(78191)\n@:cond-branch _hx_tmp"];
n78191 -> n78192[style="dashed",color="gray",label="then"];
n78191 -> n78193[style="dashed",color="gray",label="next"];
n78190 [shape=box,label="(78190)\n_hx_tmp = true"];
n78189 [shape=box,label="(78189)\n_hx_tmp = spaceIndex > formatRange.end"];
n78188 [shape=box,label="(78188)\nvar _hx_tmp = ! _hx_tmp\n@:cond-branch _hx_tmp"];
n78188 -> n78189[style="dashed",color="gray",label="then"];
n78188 -> n78190[style="dashed",color="gray",label="else"];
n78188 -> n78191[style="dashed",color="gray",label="next"];
n78187 [shape=box,label="(78187)\n_hx_tmp = true"];
n78186 [shape=box,label="(78186)\nvar _hx_tmp = lime.text._UTF8String.UTF8String_Impl_.get_length(this.text)\n_hx_tmp = textIndex > _hx_tmp"];
n78185 [shape=box,label="(78185)\nvar _hx_tmp = ! _hx_tmp\n@:cond-branch _hx_tmp"];
n78185 -> n78186[style="dashed",color="gray",label="then"];
n78185 -> n78187[style="dashed",color="gray",label="else"];
n78185 -> n78188[style="dashed",color="gray",label="next"];
n78184 [shape=box,label="(78184)"];
n78183 [shape=box,label="(78183)\n_hx_tmp = true"];
n78182 [shape=box,label="(78182)\n_hx_tmp = spaceIndex == -1"];
n78181 [shape=box,label="(78181)\n_hx_tmp = false"];
n78180 [shape=box,label="(78180)\nvar _hx_tmp = ! spaceIndex > breakIndex\n@:cond-branch _hx_tmp"];
n78180 -> n78182[style="dashed",color="gray",label="then"];
n78180 -> n78183[style="dashed",color="gray",label="else"];
n78180 -> n78184[style="dashed",color="gray",label="next"];
n78179 [shape=box,label="(78179)\n@:cond-branch _hx_tmp"];
n78179 -> n78180[style="dashed",color="gray",label="then"];
n78179 -> n78181[style="dashed",color="gray",label="else"];
n78179 -> n78185[style="dashed",color="gray",label="next"];
n78178 [shape=box,label="(78178)\n_hx_tmp = false"];
n78177 [shape=box,label="(78177)\n_hx_tmp = breakIndex <= textIndex"];
n78176 [shape=box,label="(78176)\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp = breakIndex > -1\n@:cond-branch _hx_tmp"];
n78176 -> n78177[style="dashed",color="gray",label="then"];
n78176 -> n78178[style="dashed",color="gray",label="else"];
n78176 -> n78179[style="dashed",color="gray",label="next"];
n78175 [shape=box,label="(78175)\npreviousSpaceIndex = spaceIndex\nspaceIndex = nextSpaceIndex"];
n78174 [shape=box,label="(78174)\ntextIndex = breakIndex + 1"];
n78173 [shape=box,label="(78173)\nlayoutGroup.positions.push(null)"];
n78172 [shape=box,label="(78172)\nlayoutGroup.endIndex = breakIndex\nvar _hx_tmp = breakIndex - layoutGroup.startIndex\nvar _hx_tmp = _hx_tmp - layoutGroup.positions.length\nvar _hx_tmp = _hx_tmp < 0\n@:cond-branch _hx_tmp"];
n78172 -> n78173[style="dashed",color="gray",label="then"];
n78172 -> n78174[style="dashed",color="gray",label="next"];
n78171 [shape=box,label="(78171)"];
n78170 [shape=box,label="(78170)"];
n78169 [shape=box,label="(78169)\nmaxAscent = ascent"];
n78168 [shape=box,label="(78168)\nvar _hx_tmp = ascent > maxAscent\n@:cond-branch _hx_tmp"];
n78168 -> n78169[style="dashed",color="gray",label="then"];
n78168 -> n78170[style="dashed",color="gray",label="next"];
n78167 [shape=box,label="(78167)\nmaxHeightValue = heightValue"];
n78166 [shape=box,label="(78166)\nvar _hx_tmp = heightValue > maxHeightValue\n@:cond-branch _hx_tmp"];
n78166 -> n78167[style="dashed",color="gray",label="then"];
n78166 -> n78168[style="dashed",color="gray",label="next"];
n78165 [shape=box,label="(78165)\nleading = currentFormat.leading\nvar heightValue = ascent + descent\nheightValue = heightValue + leading"];
n78164 [shape=box,label="(78164)"];
n78163 [shape=box,label="(78163)\nascent = currentFormat.size\ndescent = currentFormat.size * 0.185"];
n78162 [shape=box,label="(78162)\nvar ascent = font.ascender / font.unitsPerEM\nascent = ascent * currentFormat.size\nvar descent = font.descender / font.unitsPerEM\nvar descent = descent * currentFormat.size\ndescent = Math.abs(descent)"];
n78161 [shape=box,label="(78161)\nvar _hx_tmp = font != null\n@:cond-branch _hx_tmp"];
n78161 -> n78162[style="dashed",color="gray",label="then"];
n78161 -> n78163[style="dashed",color="gray",label="else"];
n78161 -> n78164[style="dashed",color="gray",label="next"];
n78160 [shape=box,label="(78160)\nascent = currentFormat.size * currentFormat.__ascent\ndescent = currentFormat.size * currentFormat.__descent"];
n78159 [shape=box,label="(78159)\nvar this = `this.textFormatRanges\nformatRange = cast this.get(rangeIndex)\ncurrentFormat.__merge(formatRange.format)\nfont = openfl._internal.text.TextEngine.getFontInstance(currentFormat)\nvar _hx_tmp = currentFormat.__ascent != null\n@:cond-branch _hx_tmp"];
n78159 -> n78160[style="dashed",color="gray",label="then"];
n78159 -> n78161[style="dashed",color="gray",label="else"];
n78159 -> n78165[style="dashed",color="gray",label="next"];
n78158 [shape=box,label="(78158)\nrangeIndex = rangeIndex + 1"];
n78157 [shape=box,label="(78157)"];
n78157 -> n78158[style="dashed",color="gray",label="sub"];
n78157 -> n78159[style="dashed",color="gray",label="next"];
n78156 [shape=box,label="(78156)\nvar this = `this.textFormatRanges\nvar _hx_tmp = cast this.get_length()\nvar _hx_tmp = _hx_tmp - 1\nvar _hx_tmp = rangeIndex < _hx_tmp\n@:cond-branch _hx_tmp"];
n78156 -> n78157[style="dashed",color="gray",label="then"];
n78156 -> n78166[style="dashed",color="gray",label="next"];
n78155 [shape=box,label="(78155)\nvar _hx_tmp = breakIndex == previousSpaceIndex\n@:cond-branch _hx_tmp"];
n78155 -> n78172[style="dashed",color="gray",label="then"];
n78155 -> n78175[style="dashed",color="gray",label="next"];
n78154 [shape=box,label="(78154)\nlayoutGroup = null\ntextIndex = formatRange.end"];
n78154 -> n78156[style="dashed",color="gray",label="sub"];
n78154 -> n78171[style="dashed",color="gray",label="next"];
n78153 [shape=box,label="(78153)\nvar nextSpaceIndex = lime.text._UTF8String.UTF8String_Impl_.indexOf(this.text, \" \", textIndex)\nvar _hx_tmp = formatRange.end <= previousSpaceIndex\n@:cond-branch _hx_tmp"];
n78153 -> n78154[style="dashed",color="gray",label="then"];
n78153 -> n78155[style="dashed",color="gray",label="else"];
n78153 -> n78176[style="dashed",color="gray",label="next"];
n78152 [shape=box,label="(78152)\noffsetX = offsetX + widthValue\ntextIndex = endIndex"];
n78151 [shape=box,label="(78151)"];
n78150 [shape=box,label="(78150)"];
n78149 [shape=box,label="(78149)\nendIndex = endIndex + 1"];
n78148 [shape=box,label="(78148)\nlayoutGroup.positions = positions\nlayoutGroup.offsetX = offsetX\nlayoutGroup.ascent = ascent\nlayoutGroup.descent = descent\nlayoutGroup.leading = leading\nlayoutGroup.lineIndex = lineIndex\nlayoutGroup.offsetY = offsetY\nlayoutGroup.width = widthValue\nlayoutGroup.height = heightValue"];
n78147 [shape=box,label="(78147)"];
n78146 [shape=box,label="(78146)\nvar this = `this.layoutGroups\ncast this.push(layoutGroup)"];
n78145 [shape=box,label="(78145)\nlayoutGroup.format = formatRange.format\nlayoutGroup.startIndex = textIndex\nlayoutGroup.endIndex = endIndex"];
n78144 [shape=box,label="(78144)\nlayoutGroup = new openfl._internal.text.TextLayoutGroup(formatRange.format, textIndex, endIndex)"];
n78144 -> n78146[style="dashed",color="gray",label="sub"];
n78144 -> n78147[style="dashed",color="gray",label="next"];
n78143 [shape=box,label="(78143)\n@:cond-branch _hx_tmp"];
n78143 -> n78144[style="dashed",color="gray",label="then"];
n78143 -> n78145[style="dashed",color="gray",label="else"];
n78143 -> n78148[style="dashed",color="gray",label="next"];
n78142 [shape=box,label="(78142)\n_hx_tmp = true"];
n78141 [shape=box,label="(78141)\n_hx_tmp = layoutGroup.startIndex != layoutGroup.endIndex"];
n78140 [shape=box,label="(78140)\nlayoutGroup.endIndex = endIndex\nlayoutGroup.positions = layoutGroup.positions.concat(positions)\nvar layoutGroup = layoutGroup\nvar layoutGroup = layoutGroup.width\nvar widthValue = widthValue\nlayoutGroup.width = layoutGroup + widthValue\nvar _hx_tmp = breakIndex == endIndex\n@:cond-branch _hx_tmp"];
n78140 -> n78149[style="dashed",color="gray",label="then"];
n78140 -> n78150[style="dashed",color="gray",label="next"];
n78139 [shape=box,label="(78139)\nvar _hx_tmp\nvar _hx_tmp = ! layoutGroup == null\n@:cond-branch _hx_tmp"];
n78139 -> n78141[style="dashed",color="gray",label="then"];
n78139 -> n78142[style="dashed",color="gray",label="else"];
n78139 -> n78143[style="dashed",color="gray",label="next"];
n78138 [shape=box,label="(78138)\n@:cond-branch _hx_tmp"];
n78138 -> n78139[style="dashed",color="gray",label="then"];
n78138 -> n78140[style="dashed",color="gray",label="else"];
n78138 -> n78151[style="dashed",color="gray",label="next"];
n78137 [shape=box,label="(78137)\n_hx_tmp = true"];
n78136 [shape=box,label="(78136)\n_hx_tmp = lineFormat.align == cast 2"];
n78135 [shape=box,label="(78135)"];
n78134 [shape=box,label="(78134)\nlayoutGroup.endIndex = spaceIndex\nlayoutGroup.positions = layoutGroup.positions.concat(positions)\nvar layoutGroup = layoutGroup\nvar layoutGroup = layoutGroup.width\nvar widthValue = widthValue\nlayoutGroup.width = layoutGroup + widthValue"];
n78133 [shape=box,label="(78133)\nvar _hx_tmp\nvar _hx_tmp = ! layoutGroup == null\n@:cond-branch _hx_tmp"];
n78133 -> n78136[style="dashed",color="gray",label="then"];
n78133 -> n78137[style="dashed",color="gray",label="else"];
n78133 -> n78138[style="dashed",color="gray",label="next"];
n78132 [shape=box,label="(78132)\nvar _hx_tmp = lineFormat.align != cast 2\n@:cond-branch _hx_tmp"];
n78132 -> n78134[style="dashed",color="gray",label="then"];
n78132 -> n78135[style="dashed",color="gray",label="next"];
n78131 [shape=box,label="(78131)\n@:cond-branch _hx_tmp"];
n78131 -> n78132[style="dashed",color="gray",label="then"];
n78131 -> n78133[style="dashed",color="gray",label="else"];
n78131 -> n78152[style="dashed",color="gray",label="next"];
n78130 [shape=box,label="(78130)\n_hx_tmp = false"];
n78129 [shape=box,label="(78129)\n_hx_tmp = textIndex == spaceIndex"];
n78128 [shape=box,label="(78128)\nlayoutGroup.positions = positions\nlayoutGroup.offsetX = offsetX\nlayoutGroup.ascent = ascent\nlayoutGroup.descent = descent\nlayoutGroup.leading = leading\nlayoutGroup.lineIndex = lineIndex\nlayoutGroup.offsetY = offsetY\nlayoutGroup.width = widthValue\nlayoutGroup.height = heightValue\noffsetX = offsetX + widthValue\ntextIndex = endIndex\nwrap = false"];
n78127 [shape=box,label="(78127)"];
n78126 [shape=box,label="(78126)\nvar this = `this.layoutGroups\ncast this.push(layoutGroup)"];
n78125 [shape=box,label="(78125)\nlayoutGroup.format = formatRange.format\nlayoutGroup.startIndex = textIndex\nlayoutGroup.endIndex = endIndex"];
n78124 [shape=box,label="(78124)\nlayoutGroup = new openfl._internal.text.TextLayoutGroup(formatRange.format, textIndex, endIndex)"];
n78124 -> n78126[style="dashed",color="gray",label="sub"];
n78124 -> n78127[style="dashed",color="gray",label="next"];
n78123 [shape=box,label="(78123)\n@:cond-branch _hx_tmp"];
n78123 -> n78124[style="dashed",color="gray",label="then"];
n78123 -> n78125[style="dashed",color="gray",label="else"];
n78123 -> n78128[style="dashed",color="gray",label="next"];
n78122 [shape=box,label="(78122)\n_hx_tmp = true"];
n78121 [shape=box,label="(78121)\n_hx_tmp = layoutGroup.startIndex != layoutGroup.endIndex"];
n78120 [shape=box,label="(78120)\nvar _hx_tmp\nvar _hx_tmp = ! layoutGroup == null\n@:cond-branch _hx_tmp"];
n78120 -> n78121[style="dashed",color="gray",label="then"];
n78120 -> n78122[style="dashed",color="gray",label="else"];
n78120 -> n78123[style="dashed",color="gray",label="next"];
n78119 [shape=box,label="(78119)"];
n78118 [shape=box,label="(78118)"];
n78117 [shape=box,label="(78117)\nwidthValue = width\ntempWidth = widthValue"];
n78116 [shape=box,label="(78116)"];
n78115 [shape=box,label="(78115)\nvar position = positions[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n78114 [shape=box,label="(78114)\nbreak"];
n78113 [shape=box,label="(78113)\nvar widthValue = ! ((` < positions.length))\n@:cond-branch widthValue"];
n78113 -> n78114[style="dashed",color="gray",label="then"];
n78113 -> n78115[style="dashed",color="gray",label="next"];
n78112 [shape=box,label="<loop-head>
(78112)"];
n78111 [shape=box,label="(78111)\nwhile ((true)) @:block 78113"];
n78111 -> n78112[style="dashed",color="gray",label="loop-head"];
n78111 -> n78113[style="dashed",color="gray",label="loop-body"];
n78111 -> n78116[style="dashed",color="gray",label="next"];
n78110 [shape=box,label="(78110)\nvar ` = 0"];
n78110 -> n78111[style="dashed",color="gray",label="merge"];
n78109 [shape=box,label="(78109)\nvar `this = `this.__textLayout\nvar positions = lime.text._UTF8String.UTF8String_Impl_.substring(text, textIndex, endIndex)\n`this.set_text(positions)\npositions = `this.__textLayout.get_positions()\nvar width = 0.0"];
n78109 -> n78110[style="dashed",color="gray",label="sub"];
n78109 -> n78117[style="dashed",color="gray",label="next"];
n78108 [shape=box,label="(78108)\n`this.__textLayout.set_size(formatRange.format.size)"];
n78107 [shape=box,label="(78107)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar positions = formatRange.format.size != null\n@:cond-branch positions"];
n78107 -> n78108[style="dashed",color="gray",label="then"];
n78107 -> n78109[style="dashed",color="gray",label="next"];
n78106 [shape=box,label="(78106)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n78105 [shape=box,label="(78105)\ntextIndex = textIndex + i\nvar text = `this.text\nvar positions = `this.__textLayout == null\n@:cond-branch positions"];
n78105 -> n78106[style="dashed",color="gray",label="then"];
n78105 -> n78107[style="dashed",color="gray",label="next"];
n78104 [shape=box,label="(78104)\noffsetY = offsetY + maxHeightValue\nmaxAscent = 0.0\nmaxHeightValue = 0.0\nlineIndex = lineIndex + 1\noffsetX = 2"];
n78103 [shape=box,label="(78103)"];
n78102 [shape=box,label="(78102)\nlg.ascent = maxAscent\nlg.height = maxHeightValue"];
n78101 [shape=box,label="(78101)\nbreak"];
n78100 [shape=box,label="(78100)\nvar _hx_tmp = lg.lineIndex > lineIndex\n@:cond-branch _hx_tmp"];
n78100 -> n78101[style="dashed",color="gray",label="then"];
n78100 -> n78102[style="dashed",color="gray",label="next"];
n78099 [shape=box,label="(78099)\ncontinue"];
n78098 [shape=box,label="(78098)\nvar lg = cast `1.get(`)\n` = ` + 1\nvar _hx_tmp = lg.lineIndex < lineIndex\n@:cond-branch _hx_tmp"];
n78098 -> n78099[style="dashed",color="gray",label="then"];
n78098 -> n78100[style="dashed",color="gray",label="next"];
n78097 [shape=box,label="(78097)\nbreak"];
n78096 [shape=box,label="(78096)\nvar _hx_tmp = `1.get_length()\nvar _hx_tmp = ! ((` < _hx_tmp))\n@:cond-branch _hx_tmp"];
n78096 -> n78097[style="dashed",color="gray",label="then"];
n78096 -> n78098[style="dashed",color="gray",label="next"];
n78095 [shape=box,label="<loop-head>
(78095)"];
n78094 [shape=box,label="(78094)\nwhile ((true)) @:block 78096"];
n78094 -> n78095[style="dashed",color="gray",label="loop-head"];
n78094 -> n78096[style="dashed",color="gray",label="loop-body"];
n78094 -> n78103[style="dashed",color="gray",label="next"];
n78093 [shape=box,label="(78093)\nvar ` = 0\nvar `1 = `this.layoutGroups"];
n78093 -> n78094[style="dashed",color="gray",label="merge"];
n78092 [shape=box,label="(78092)"];
n78092 -> n78093[style="dashed",color="gray",label="sub"];
n78092 -> n78104[style="dashed",color="gray",label="next"];
n78091 [shape=box,label="(78091)\nmaxHeightValue = heightValue"];
n78090 [shape=box,label="(78090)\nvar _hx_tmp = heightValue > maxHeightValue\n@:cond-branch _hx_tmp"];
n78090 -> n78091[style="dashed",color="gray",label="then"];
n78090 -> n78092[style="dashed",color="gray",label="next"];
n78089 [shape=box,label="(78089)\nmaxAscent = ascent"];
n78088 [shape=box,label="(78088)\nvar _hx_tmp = ascent > maxAscent\n@:cond-branch _hx_tmp"];
n78088 -> n78089[style="dashed",color="gray",label="then"];
n78088 -> n78090[style="dashed",color="gray",label="next"];
n78087 [shape=box,label="(78087)\nvar _hx_tmp = width\nlayoutGroup.width = _hx_tmp\nlayoutGroup.height = heightValue\nlayoutGroup = null"];
n78087 -> n78088[style="dashed",color="gray",label="sub"];
n78087 -> n78105[style="dashed",color="gray",label="next"];
n78086 [shape=box,label="(78086)"];
n78085 [shape=box,label="(78085)\nvar position = positions[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n78084 [shape=box,label="(78084)\nbreak"];
n78083 [shape=box,label="(78083)\nvar _hx_tmp = ! ((` < positions.length))\n@:cond-branch _hx_tmp"];
n78083 -> n78084[style="dashed",color="gray",label="then"];
n78083 -> n78085[style="dashed",color="gray",label="next"];
n78082 [shape=box,label="<loop-head>
(78082)"];
n78081 [shape=box,label="(78081)\nwhile ((true)) @:block 78083"];
n78081 -> n78082[style="dashed",color="gray",label="loop-head"];
n78081 -> n78083[style="dashed",color="gray",label="loop-body"];
n78081 -> n78086[style="dashed",color="gray",label="next"];
n78080 [shape=box,label="(78080)\nvar ` = 0"];
n78080 -> n78081[style="dashed",color="gray",label="merge"];
n78079 [shape=box,label="(78079)\nvar `this = `this.__textLayout\nvar _hx_tmp = textIndex + i\nvar _hx_tmp = lime.text._UTF8String.UTF8String_Impl_.substring(text, textIndex, _hx_tmp)\n`this.set_text(_hx_tmp)\nvar _hx_tmp = `this.__textLayout.get_positions()\nlayoutGroup.positions = _hx_tmp\nlayoutGroup.offsetX = offsetX\nlayoutGroup.ascent = ascent\nlayoutGroup.descent = descent\nlayoutGroup.leading = leading\nlayoutGroup.lineIndex = lineIndex\nlayoutGroup.offsetY = offsetY\nvar positions = layoutGroup.positions\nvar width = 0.0"];
n78079 -> n78080[style="dashed",color="gray",label="sub"];
n78079 -> n78087[style="dashed",color="gray",label="next"];
n78078 [shape=box,label="(78078)\n`this.__textLayout.set_size(formatRange.format.size)"];
n78077 [shape=box,label="(78077)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar _hx_tmp = formatRange.format.size != null\n@:cond-branch _hx_tmp"];
n78077 -> n78078[style="dashed",color="gray",label="then"];
n78077 -> n78079[style="dashed",color="gray",label="next"];
n78076 [shape=box,label="(78076)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n78075 [shape=box,label="(78075)\nvar text = `this.text\nvar _hx_tmp = `this.__textLayout == null\n@:cond-branch _hx_tmp"];
n78075 -> n78076[style="dashed",color="gray",label="then"];
n78075 -> n78077[style="dashed",color="gray",label="next"];
n78074 [shape=box,label="(78074)"];
n78073 [shape=box,label="(78073)"];
n78072 [shape=box,label="(78072)\nvar this = `this.layoutGroups\ncast this.push(layoutGroup)"];
n78071 [shape=box,label="(78071)\nlayoutGroup.format = formatRange.format\nlayoutGroup.startIndex = textIndex\nlayoutGroup.endIndex = endIndex"];
n78070 [shape=box,label="(78070)\nlayoutGroup = new openfl._internal.text.TextLayoutGroup(formatRange.format, textIndex, endIndex)"];
n78070 -> n78072[style="dashed",color="gray",label="sub"];
n78070 -> n78073[style="dashed",color="gray",label="next"];
n78069 [shape=box,label="(78069)\n@:cond-branch _hx_tmp"];
n78069 -> n78070[style="dashed",color="gray",label="then"];
n78069 -> n78071[style="dashed",color="gray",label="else"];
n78069 -> n78074[style="dashed",color="gray",label="next"];
n78068 [shape=box,label="(78068)\n_hx_tmp = true"];
n78067 [shape=box,label="(78067)\n_hx_tmp = layoutGroup.startIndex != layoutGroup.endIndex"];
n78066 [shape=box,label="(78066)\nvar endIndex = textIndex + i\nvar _hx_tmp\nvar _hx_tmp = ! layoutGroup == null\n@:cond-branch _hx_tmp"];
n78066 -> n78067[style="dashed",color="gray",label="then"];
n78066 -> n78068[style="dashed",color="gray",label="else"];
n78066 -> n78069[style="dashed",color="gray",label="next"];
n78065 [shape=box,label="(78065)"];
n78065 -> n78066[style="dashed",color="gray",label="sub"];
n78065 -> n78075[style="dashed",color="gray",label="next"];
n78064 [shape=box,label="(78064)\noffsetX = 2\noffsetY = offsetY + layoutGroup.height\nlineIndex = lineIndex + 1\nbreak"];
n78063 [shape=box,label="(78063)\nvar _hx_tmp = i == 0\n@:cond-branch _hx_tmp"];
n78063 -> n78064[style="dashed",color="gray",label="then"];
n78063 -> n78065[style="dashed",color="gray",label="else"];
n78063 -> n78118[style="dashed",color="gray",label="next"];
n78062 [shape=box,label="(78062)\ni = lime.text._UTF8String.UTF8String_Impl_.get_length(`this.text)"];
n78061 [shape=box,label="(78061)\n@:cond-branch _hx_tmp"];
n78061 -> n78062[style="dashed",color="gray",label="then"];
n78061 -> n78063[style="dashed",color="gray",label="next"];
n78060 [shape=box,label="(78060)\n_hx_tmp = false"];
n78059 [shape=box,label="(78059)\nvar _hx_tmp = `this.width - 4\n_hx_tmp = tempWidth > _hx_tmp"];
n78058 [shape=box,label="(78058)\nvar _hx_tmp\nvar _hx_tmp = i == 0\n@:cond-branch _hx_tmp"];
n78058 -> n78059[style="dashed",color="gray",label="then"];
n78058 -> n78060[style="dashed",color="gray",label="else"];
n78058 -> n78061[style="dashed",color="gray",label="next"];
n78057 [shape=box,label="(78057)"];
n78056 [shape=box,label="(78056)\ni = i + 1"];
n78055 [shape=box,label="(78055)"];
n78055 -> n78056[style="dashed",color="gray",label="sub"];
n78055 -> n78057[style="dashed",color="gray",label="next"];
n78054 [shape=box,label="(78054)\nbreak"];
n78053 [shape=box,label="(78053)\ni = i - 1"];
n78052 [shape=box,label="(78052)"];
n78052 -> n78053[style="dashed",color="gray",label="sub"];
n78052 -> n78054[style="dashed",color="gray",label="next"];
n78051 [shape=box,label="(78051)\ntempWidth = width\nvar _hx_tmp = offsetX + tempWidth\nvar _hx_tmp = `this.width - 2\nvar _hx_tmp = _hx_tmp > _hx_tmp\n@:cond-branch _hx_tmp"];
n78051 -> n78052[style="dashed",color="gray",label="then"];
n78051 -> n78055[style="dashed",color="gray",label="next"];
n78050 [shape=box,label="(78050)"];
n78049 [shape=box,label="(78049)\nvar position = `1[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n78048 [shape=box,label="(78048)\nbreak"];
n78047 [shape=box,label="(78047)\nvar tempWidth = ! ((` < `1.length))\n@:cond-branch tempWidth"];
n78047 -> n78048[style="dashed",color="gray",label="then"];
n78047 -> n78049[style="dashed",color="gray",label="next"];
n78046 [shape=box,label="<loop-head>
(78046)"];
n78045 [shape=box,label="(78045)\nwhile ((true)) @:block 78047"];
n78045 -> n78046[style="dashed",color="gray",label="loop-head"];
n78045 -> n78047[style="dashed",color="gray",label="loop-body"];
n78045 -> n78050[style="dashed",color="gray",label="next"];
n78044 [shape=box,label="(78044)\nvar ` = 0\nvar `1 = `this.__textLayout.get_positions()"];
n78044 -> n78045[style="dashed",color="gray",label="merge"];
n78043 [shape=box,label="(78043)\n`this.__textLayout.set_text(text)"];
n78043 -> n78044[style="dashed",color="gray",label="sub"];
n78043 -> n78051[style="dashed",color="gray",label="next"];
n78042 [shape=box,label="(78042)\n`this.__textLayout.set_size(formatRange.format.size)"];
n78041 [shape=box,label="(78041)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar tempWidth = formatRange.format.size != null\n@:cond-branch tempWidth"];
n78041 -> n78042[style="dashed",color="gray",label="then"];
n78041 -> n78043[style="dashed",color="gray",label="next"];
n78040 [shape=box,label="(78040)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n78039 [shape=box,label="(78039)\nvar text = lime.text._UTF8String.UTF8String_Impl_.substr(`this.text, textIndex, i)\nvar tempWidth = `this.__textLayout == null\n@:cond-branch tempWidth"];
n78039 -> n78040[style="dashed",color="gray",label="then"];
n78039 -> n78041[style="dashed",color="gray",label="next"];
n78038 [shape=box,label="(78038)\nbreak"];
n78037 [shape=box,label="(78037)\nvar _hx_tmp = textIndex + i\nvar _hx_tmp = endIndex + 1\nvar _hx_tmp = ! ((_hx_tmp < _hx_tmp))\n@:cond-branch _hx_tmp"];
n78037 -> n78038[style="dashed",color="gray",label="then"];
n78037 -> n78039[style="dashed",color="gray",label="next"];
n78036 [shape=box,label="<loop-head>
(78036)"];
n78035 [shape=box,label="(78035)\nwhile ((true)) @:block 78037"];
n78035 -> n78036[style="dashed",color="gray",label="loop-head"];
n78035 -> n78037[style="dashed",color="gray",label="loop-body"];
n78035 -> n78058[style="dashed",color="gray",label="next"];
n78034 [shape=box,label="(78034)\nvar i = 1"];
n78034 -> n78035[style="dashed",color="gray",label="merge"];
n78033 [shape=box,label="(78033)\nbreak"];
n78032 [shape=box,label="(78032)\nvar _hx_tmp = offsetX + tempWidth\nvar _hx_tmp = `this.width - 2\nvar _hx_tmp = ! ((_hx_tmp > _hx_tmp))\n@:cond-branch _hx_tmp"];
n78032 -> n78033[style="dashed",color="gray",label="then"];
n78032 -> n78034[style="dashed",color="gray",label="next"];
n78031 [shape=box,label="<loop-head>
(78031)"];
n78030 [shape=box,label="(78030)\nwhile ((true)) @:block 78032"];
n78030 -> n78031[style="dashed",color="gray",label="loop-head"];
n78030 -> n78032[style="dashed",color="gray",label="loop-body"];
n78030 -> n78119[style="dashed",color="gray",label="next"];
n78029 [shape=box,label="(78029)\nvar tempWidth = width"];
n78029 -> n78030[style="dashed",color="gray",label="merge"];
n78028 [shape=box,label="(78028)"];
n78027 [shape=box,label="(78027)\nvar position = `1[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n78026 [shape=box,label="(78026)\nbreak"];
n78025 [shape=box,label="(78025)\nvar _hx_tmp = ! ((` < `1.length))\n@:cond-branch _hx_tmp"];
n78025 -> n78026[style="dashed",color="gray",label="then"];
n78025 -> n78027[style="dashed",color="gray",label="next"];
n78024 [shape=box,label="<loop-head>
(78024)"];
n78023 [shape=box,label="(78023)\nwhile ((true)) @:block 78025"];
n78023 -> n78024[style="dashed",color="gray",label="loop-head"];
n78023 -> n78025[style="dashed",color="gray",label="loop-body"];
n78023 -> n78028[style="dashed",color="gray",label="next"];
n78022 [shape=box,label="(78022)\nvar ` = 0\nvar `1 = `this.__textLayout.get_positions()"];
n78022 -> n78023[style="dashed",color="gray",label="merge"];
n78021 [shape=box,label="(78021)\n`this.__textLayout.set_text(text)"];
n78021 -> n78022[style="dashed",color="gray",label="sub"];
n78021 -> n78029[style="dashed",color="gray",label="next"];
n78020 [shape=box,label="(78020)\n`this.__textLayout.set_size(formatRange.format.size)"];
n78019 [shape=box,label="(78019)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar _hx_tmp = formatRange.format.size != null\n@:cond-branch _hx_tmp"];
n78019 -> n78020[style="dashed",color="gray",label="then"];
n78019 -> n78021[style="dashed",color="gray",label="next"];
n78018 [shape=box,label="(78018)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n78017 [shape=box,label="(78017)\nvar text = lime.text._UTF8String.UTF8String_Impl_.substring(`this.text, textIndex, endIndex)\nvar _hx_tmp = `this.__textLayout == null\n@:cond-branch _hx_tmp"];
n78017 -> n78018[style="dashed",color="gray",label="then"];
n78017 -> n78019[style="dashed",color="gray",label="next"];
n78016 [shape=box,label="(78016)\nvar _hx_tmp = this.width >= 4\n@:cond-branch _hx_tmp"];
n78016 -> n78017[style="dashed",color="gray",label="then"];
n78016 -> n78120[style="dashed",color="gray",label="next"];
n78015 [shape=box,label="(78015)"];
n78014 [shape=box,label="(78014)"];
n78013 [shape=box,label="(78013)\n`1 = `1 + 1\nvar i = `1 - 1\nvar this = this.layoutGroups\nlayoutGroup = cast this.get(i)\nvar layoutGroup = layoutGroup\nvar layoutGroup = layoutGroup.offsetX\nvar bumpX = bumpX\nlayoutGroup.offsetX = layoutGroup - bumpX\nlayoutGroup.offsetY = offsetY\nlayoutGroup.lineIndex = lineIndex\noffsetX = offsetX + layoutGroup.width"];
n78012 [shape=box,label="(78012)\nbreak"];
n78011 [shape=box,label="(78011)\nvar _hx_tmp = ! ((`1 < `))\n@:cond-branch _hx_tmp"];
n78011 -> n78012[style="dashed",color="gray",label="then"];
n78011 -> n78013[style="dashed",color="gray",label="next"];
n78010 [shape=box,label="<loop-head>
(78010)"];
n78009 [shape=box,label="(78009)\nwhile ((true)) @:block 78011"];
n78009 -> n78010[style="dashed",color="gray",label="loop-head"];
n78009 -> n78011[style="dashed",color="gray",label="loop-body"];
n78009 -> n78014[style="dashed",color="gray",label="next"];
n78008 [shape=box,label="(78008)\nvar this = this.layoutGroups\nvar `1 = cast this.get_length()\nvar `1 = `1 - offsetCount\nvar this = this.layoutGroups\nvar ` = cast this.get_length()"];
n78008 -> n78009[style="dashed",color="gray",label="merge"];
n78007 [shape=box,label="(78007)\nvar this = this.layoutGroups\nvar this = this.layoutGroups\nvar index = cast this.get_length()\nvar index = index - offsetCount\nvar bumpX = cast this.get(index)\nvar bumpX = (bumpX).offsetX"];
n78007 -> n78008[style="dashed",color="gray",label="sub"];
n78007 -> n78015[style="dashed",color="gray",label="next"];
n78006 [shape=box,label="(78006)\noffsetX = 2\nvar _hx_tmp = offsetCount > 0\n@:cond-branch _hx_tmp"];
n78006 -> n78007[style="dashed",color="gray",label="then"];
n78006 -> n78016[style="dashed",color="gray",label="next"];
n78005 [shape=box,label="(78005)\noffsetY = offsetY + maxHeightValue\nmaxAscent = 0.0\nmaxHeightValue = 0.0\nlineIndex = lineIndex + 1\noffsetX = 2"];
n78004 [shape=box,label="(78004)"];
n78003 [shape=box,label="(78003)\nlg.ascent = maxAscent\nlg.height = maxHeightValue"];
n78002 [shape=box,label="(78002)\nbreak"];
n78001 [shape=box,label="(78001)\nvar _hx_tmp = lg.lineIndex > lineIndex\n@:cond-branch _hx_tmp"];
n78001 -> n78002[style="dashed",color="gray",label="then"];
n78001 -> n78003[style="dashed",color="gray",label="next"];
n78000 [shape=box,label="(78000)\ncontinue"];
n77999 [shape=box,label="(77999)\nvar lg = cast `1.get(`)\n` = ` + 1\nvar _hx_tmp = lg.lineIndex < lineIndex\n@:cond-branch _hx_tmp"];
n77999 -> n78000[style="dashed",color="gray",label="then"];
n77999 -> n78001[style="dashed",color="gray",label="next"];
n77998 [shape=box,label="(77998)\nbreak"];
n77997 [shape=box,label="(77997)\nvar _hx_tmp = `1.get_length()\nvar _hx_tmp = ! ((` < _hx_tmp))\n@:cond-branch _hx_tmp"];
n77997 -> n77998[style="dashed",color="gray",label="then"];
n77997 -> n77999[style="dashed",color="gray",label="next"];
n77996 [shape=box,label="<loop-head>
(77996)"];
n77995 [shape=box,label="(77995)\nwhile ((true)) @:block 77997"];
n77995 -> n77996[style="dashed",color="gray",label="loop-head"];
n77995 -> n77997[style="dashed",color="gray",label="loop-body"];
n77995 -> n78004[style="dashed",color="gray",label="next"];
n77994 [shape=box,label="(77994)\nvar ` = 0\nvar `1 = `this.layoutGroups"];
n77994 -> n77995[style="dashed",color="gray",label="merge"];
n77993 [shape=box,label="(77993)"];
n77993 -> n77994[style="dashed",color="gray",label="sub"];
n77993 -> n78005[style="dashed",color="gray",label="next"];
n77992 [shape=box,label="(77992)\nmaxHeightValue = heightValue"];
n77991 [shape=box,label="(77991)\nvar _hx_tmp = heightValue > maxHeightValue\n@:cond-branch _hx_tmp"];
n77991 -> n77992[style="dashed",color="gray",label="then"];
n77991 -> n77993[style="dashed",color="gray",label="next"];
n77990 [shape=box,label="(77990)\nmaxAscent = ascent"];
n77989 [shape=box,label="(77989)\nvar _hx_tmp = ascent > maxAscent\n@:cond-branch _hx_tmp"];
n77989 -> n77990[style="dashed",color="gray",label="then"];
n77989 -> n77991[style="dashed",color="gray",label="next"];
n77988 [shape=box,label="(77988)\nvar _hx_tmp = previousSpaceIndex + 1\nvar _hx_tmp = textIndex == _hx_tmp\n@:cond-branch _hx_tmp"];
n77988 -> n77989[style="dashed",color="gray",label="then"];
n77988 -> n78006[style="dashed",color="gray",label="next"];
n77987 [shape=box,label="(77987)"];
n77986 [shape=box,label="(77986)\ni = i - 1"];
n77985 [shape=box,label="(77985)"];
n77985 -> n77986[style="dashed",color="gray",label="sub"];
n77985 -> n77987[style="dashed",color="gray",label="next"];
n77984 [shape=box,label="(77984)\nbreak"];
n77983 [shape=box,label="(77983)\noffsetCount = offsetCount + 1"];
n77982 [shape=box,label="(77982)\n@:cond-branch _hx_tmp"];
n77982 -> n77983[style="dashed",color="gray",label="then"];
n77982 -> n77984[style="dashed",color="gray",label="else"];
n77982 -> n77985[style="dashed",color="gray",label="next"];
n77981 [shape=box,label="(77981)\n_hx_tmp = false"];
n77980 [shape=box,label="(77980)\n_hx_tmp = layoutGroup.startIndex > previousSpaceIndex"];
n77979 [shape=box,label="(77979)\nvar this = this.layoutGroups\nlayoutGroup = cast this.get(i)\nvar _hx_tmp\nvar _hx_tmp = i > 0\n@:cond-branch _hx_tmp"];
n77979 -> n77980[style="dashed",color="gray",label="then"];
n77979 -> n77981[style="dashed",color="gray",label="else"];
n77979 -> n77982[style="dashed",color="gray",label="next"];
n77978 [shape=box,label="<loop-head>
(77978)"];
n77977 [shape=box,label="(77977)\nwhile ((true)) @:block 77979"];
n77977 -> n77978[style="dashed",color="gray",label="loop-head"];
n77977 -> n77979[style="dashed",color="gray",label="loop-body"];
n77977 -> n77988[style="dashed",color="gray",label="next"];
n77976 [shape=box,label="(77976)\nvar this = this.layoutGroups\nvar i = cast this.get_length()\nvar i = i - 1\nvar offsetCount = 0"];
n77976 -> n77977[style="dashed",color="gray",label="merge"];
n77975 [shape=box,label="(77975)\nprevious.width = previous - _hx_tmp\nprevious.endIndex --"];
n77974 [shape=box,label="(77974)\n_hx_tmp = 0"];
n77973 [shape=box,label="(77973)\n_hx_tmp = previous.positions[index].advance.x"];
n77972 [shape=box,label="(77972)\n@:cond-branch _hx_tmp"];
n77972 -> n77973[style="dashed",color="gray",label="then"];
n77972 -> n77974[style="dashed",color="gray",label="else"];
n77972 -> n77975[style="dashed",color="gray",label="next"];
n77971 [shape=box,label="(77971)\n_hx_tmp = false"];
n77970 [shape=box,label="(77970)\n_hx_tmp = index < previous.positions.length"];
n77969 [shape=box,label="(77969)\nvar previous = previous\nvar previous = previous.width\nvar index = previous.positions.length - 1\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp = index >= 0\n@:cond-branch _hx_tmp"];
n77969 -> n77970[style="dashed",color="gray",label="then"];
n77969 -> n77971[style="dashed",color="gray",label="else"];
n77969 -> n77972[style="dashed",color="gray",label="next"];
n77968 [shape=box,label="(77968)\nvar this = this.layoutGroups\nvar this = this.layoutGroups\nvar index = cast this.get_length()\nvar index = index - 1\nprevious = cast this.get(index)"];
n77967 [shape=box,label="(77967)\nvar previous = layoutGroup\nvar _hx_tmp = previous == null\n@:cond-branch _hx_tmp"];
n77967 -> n77968[style="dashed",color="gray",label="then"];
n77967 -> n77969[style="dashed",color="gray",label="next"];
n77966 [shape=box,label="(77966)\n@:cond-branch _hx_tmp"];
n77966 -> n77967[style="dashed",color="gray",label="then"];
n77966 -> n77976[style="dashed",color="gray",label="next"];
n77965 [shape=box,label="(77965)"];
n77964 [shape=box,label="(77964)\n_hx_tmp = true"];
n77963 [shape=box,label="(77963)\nvar this = this.layoutGroups\nvar _hx_tmp = cast this.get_length()\n_hx_tmp = _hx_tmp > 0"];
n77962 [shape=box,label="(77962)\n_hx_tmp = false"];
n77961 [shape=box,label="(77961)\nvar _hx_tmp = ! layoutGroup != null\n@:cond-branch _hx_tmp"];
n77961 -> n77963[style="dashed",color="gray",label="then"];
n77961 -> n77964[style="dashed",color="gray",label="else"];
n77961 -> n77965[style="dashed",color="gray",label="next"];
n77960 [shape=box,label="(77960)\nvar _hx_tmp\nvar _hx_tmp = layoutGroup != null\n@:cond-branch _hx_tmp"];
n77960 -> n78129[style="dashed",color="gray",label="then"];
n77960 -> n78130[style="dashed",color="gray",label="else"];
n77960 -> n78131[style="dashed",color="gray",label="next"];
n77959 [shape=box,label="(77959)\nvar _hx_tmp\nvar _hx_tmp = lineFormat.align != cast 2\n@:cond-branch _hx_tmp"];
n77959 -> n77961[style="dashed",color="gray",label="then"];
n77959 -> n77962[style="dashed",color="gray",label="else"];
n77959 -> n77966[style="dashed",color="gray",label="next"];
n77958 [shape=box,label="(77958)\nvar wrap = wrap\n@:cond-branch wrap"];
n77958 -> n77959[style="dashed",color="gray",label="then"];
n77958 -> n77960[style="dashed",color="gray",label="else"];
n77958 -> n78153[style="dashed",color="gray",label="next"];
n77957 [shape=box,label="(77957)"];
n77956 [shape=box,label="(77956)"];
n77955 [shape=box,label="(77955)"];
n77954 [shape=box,label="(77954)\nwrap = false"];
n77953 [shape=box,label="(77953)\nvar lastPosition = positions.length - 1\nvar lastPosition = positions[lastPosition]\nvar spaceWidth = lastPosition.advance.x\nvar _hx_tmp = offsetX + widthValue\nvar _hx_tmp = _hx_tmp - spaceWidth\nvar _hx_tmp = this.width - 2\nvar _hx_tmp = _hx_tmp <= _hx_tmp\n@:cond-branch _hx_tmp"];
n77953 -> n77954[style="dashed",color="gray",label="then"];
n77953 -> n77955[style="dashed",color="gray",label="next"];
n77952 [shape=box,label="(77952)\n@:cond-branch _hx_tmp"];
n77952 -> n77953[style="dashed",color="gray",label="then"];
n77952 -> n77956[style="dashed",color="gray",label="next"];
n77951 [shape=box,label="(77951)\n_hx_tmp = false"];
n77950 [shape=box,label="(77950)\nvar _hx_tmp = spaceIndex + 1\n_hx_tmp = endIndex == _hx_tmp"];
n77949 [shape=box,label="(77949)\nwrap = true\nvar _hx_tmp\nvar _hx_tmp = positions.length > 0\n@:cond-branch _hx_tmp"];
n77949 -> n77950[style="dashed",color="gray",label="then"];
n77949 -> n77951[style="dashed",color="gray",label="else"];
n77949 -> n77952[style="dashed",color="gray",label="next"];
n77948 [shape=box,label="(77948)\nvar _hx_tmp = offsetX + widthValue\nvar _hx_tmp = this.width - 2\nvar _hx_tmp = _hx_tmp > _hx_tmp\n@:cond-branch _hx_tmp"];
n77948 -> n77949[style="dashed",color="gray",label="then"];
n77948 -> n77957[style="dashed",color="gray",label="next"];
n77947 [shape=box,label="(77947)\nvar _hx_tmp = this.wordWrap\n@:cond-branch _hx_tmp"];
n77947 -> n77948[style="dashed",color="gray",label="then"];
n77947 -> n77958[style="dashed",color="gray",label="next"];
n77946 [shape=box,label="(77946)"];
n77945 [shape=box,label="(77945)\nvar spaceWidth = positions.pop().advance.x\nwidthValue = widthValue - spaceWidth"];
n77944 [shape=box,label="(77944)\nendIndex = endIndex - 1"];
n77943 [shape=box,label="(77943)"];
n77943 -> n77944[style="dashed",color="gray",label="sub"];
n77943 -> n77945[style="dashed",color="gray",label="next"];
n77942 [shape=box,label="(77942)\n@:cond-branch _hx_tmp"];
n77942 -> n77943[style="dashed",color="gray",label="then"];
n77942 -> n77946[style="dashed",color="gray",label="next"];
n77941 [shape=box,label="(77941)\n_hx_tmp = false"];
n77940 [shape=box,label="(77940)\nvar _hx_tmp = spaceIndex + 1\n_hx_tmp = endIndex == _hx_tmp"];
n77939 [shape=box,label="(77939)\nvar _hx_tmp\nvar _hx_tmp = positions.length > 0\n@:cond-branch _hx_tmp"];
n77939 -> n77940[style="dashed",color="gray",label="then"];
n77939 -> n77941[style="dashed",color="gray",label="else"];
n77939 -> n77942[style="dashed",color="gray",label="next"];
n77938 [shape=box,label="(77938)\nvar spaceWidth = positions.shift().advance.x\nwidthValue = widthValue - spaceWidth\noffsetX = offsetX + spaceWidth"];
n77937 [shape=box,label="(77937)\ntextIndex = textIndex + 1"];
n77936 [shape=box,label="(77936)"];
n77936 -> n77937[style="dashed",color="gray",label="sub"];
n77936 -> n77938[style="dashed",color="gray",label="next"];
n77935 [shape=box,label="(77935)\n@:cond-branch _hx_tmp"];
n77935 -> n77936[style="dashed",color="gray",label="then"];
n77935 -> n77939[style="dashed",color="gray",label="next"];
n77934 [shape=box,label="(77934)\n_hx_tmp = false"];
n77933 [shape=box,label="(77933)\n_hx_tmp = textIndex == previousSpaceIndex"];
n77932 [shape=box,label="(77932)\nvar _hx_tmp\nvar _hx_tmp = positions.length > 0\n@:cond-branch _hx_tmp"];
n77932 -> n77933[style="dashed",color="gray",label="then"];
n77932 -> n77934[style="dashed",color="gray",label="else"];
n77932 -> n77935[style="dashed",color="gray",label="next"];
n77931 [shape=box,label="(77931)\nwidthValue = width\nvar _hx_tmp = lineFormat.align == cast 2\n@:cond-branch _hx_tmp"];
n77931 -> n77932[style="dashed",color="gray",label="then"];
n77931 -> n77947[style="dashed",color="gray",label="next"];
n77930 [shape=box,label="(77930)"];
n77929 [shape=box,label="(77929)\nvar position = positions[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n77928 [shape=box,label="(77928)\nbreak"];
n77927 [shape=box,label="(77927)\nvar widthValue = ! ((` < positions.length))\n@:cond-branch widthValue"];
n77927 -> n77928[style="dashed",color="gray",label="then"];
n77927 -> n77929[style="dashed",color="gray",label="next"];
n77926 [shape=box,label="<loop-head>
(77926)"];
n77925 [shape=box,label="(77925)\nwhile ((true)) @:block 77927"];
n77925 -> n77926[style="dashed",color="gray",label="loop-head"];
n77925 -> n77927[style="dashed",color="gray",label="loop-body"];
n77925 -> n77930[style="dashed",color="gray",label="next"];
n77924 [shape=box,label="(77924)\nvar ` = 0"];
n77924 -> n77925[style="dashed",color="gray",label="merge"];
n77923 [shape=box,label="(77923)\nvar `this = `this.__textLayout\nvar positions = lime.text._UTF8String.UTF8String_Impl_.substring(text, textIndex, endIndex)\n`this.set_text(positions)\npositions = `this.__textLayout.get_positions()\nvar width = 0.0"];
n77923 -> n77924[style="dashed",color="gray",label="sub"];
n77923 -> n77931[style="dashed",color="gray",label="next"];
n77922 [shape=box,label="(77922)\n`this.__textLayout.set_size(formatRange.format.size)"];
n77921 [shape=box,label="(77921)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar positions = formatRange.format.size != null\n@:cond-branch positions"];
n77921 -> n77922[style="dashed",color="gray",label="then"];
n77921 -> n77923[style="dashed",color="gray",label="next"];
n77920 [shape=box,label="(77920)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n77919 [shape=box,label="(77919)\nvar text = this.text\nvar positions = `this.__textLayout == null\n@:cond-branch positions"];
n77919 -> n77920[style="dashed",color="gray",label="then"];
n77919 -> n77921[style="dashed",color="gray",label="next"];
n77918 [shape=box,label="(77918)\nendIndex = formatRange.end"];
n77917 [shape=box,label="(77917)\n@:cond-branch _hx_tmp"];
n77917 -> n77918[style="dashed",color="gray",label="then"];
n77917 -> n77919[style="dashed",color="gray",label="next"];
n77916 [shape=box,label="(77916)\n_hx_tmp = true"];
n77915 [shape=box,label="(77915)\n_hx_tmp = endIndex > formatRange.end"];
n77914 [shape=box,label="(77914)\nvar _hx_tmp\nvar _hx_tmp = ! endIndex == -1\n@:cond-branch _hx_tmp"];
n77914 -> n77915[style="dashed",color="gray",label="then"];
n77914 -> n77916[style="dashed",color="gray",label="else"];
n77914 -> n77917[style="dashed",color="gray",label="next"];
n77913 [shape=box,label="(77913)"];
n77912 [shape=box,label="(77912)\nendIndex = breakIndex"];
n77911 [shape=box,label="(77911)\n@:cond-branch _hx_tmp"];
n77911 -> n77912[style="dashed",color="gray",label="then"];
n77911 -> n77913[style="dashed",color="gray",label="next"];
n77910 [shape=box,label="(77910)\n_hx_tmp = false"];
n77909 [shape=box,label="(77909)\n_hx_tmp = breakIndex < endIndex"];
n77908 [shape=box,label="(77908)\nendIndex = spaceIndex + 1\nvar _hx_tmp\nvar _hx_tmp = breakIndex > -1\n@:cond-branch _hx_tmp"];
n77908 -> n77909[style="dashed",color="gray",label="then"];
n77908 -> n77910[style="dashed",color="gray",label="else"];
n77908 -> n77911[style="dashed",color="gray",label="next"];
n77907 [shape=box,label="(77907)\nendIndex = breakIndex"];
n77906 [shape=box,label="(77906)\nvar endIndex = -1\nvar _hx_tmp = spaceIndex == -1\n@:cond-branch _hx_tmp"];
n77906 -> n77907[style="dashed",color="gray",label="then"];
n77906 -> n77908[style="dashed",color="gray",label="else"];
n77906 -> n77914[style="dashed",color="gray",label="next"];
n77905 [shape=box,label="(77905)\nbreak"];
n77904 [shape=box,label="(77904)\nvar _hx_tmp = textIndex == formatRange.end\n@:cond-branch _hx_tmp"];
n77904 -> n77905[style="dashed",color="gray",label="then"];
n77904 -> n77906[style="dashed",color="gray",label="next"];
n77903 [shape=box,label="<loop-head>
(77903)"];
n77902 [shape=box,label="(77902)\nwhile ((true)) @:block 77904"];
n77902 -> n77903[style="dashed",color="gray",label="loop-head"];
n77902 -> n77904[style="dashed",color="gray",label="loop-body"];
n77902 -> n78194[style="dashed",color="gray",label="next"];
n77901 [shape=box,label="(77901)\nwrap = false"];
n77901 -> n77902[style="dashed",color="gray",label="merge"];
n77900 [shape=box,label="(77900)\nlayoutGroup = null"];
n77899 [shape=box,label="(77899)\n@:cond-branch _hx_tmp"];
n77899 -> n77900[style="dashed",color="gray",label="then"];
n77899 -> n77901[style="dashed",color="gray",label="next"];
n77898 [shape=box,label="(77898)\n_hx_tmp = false"];
n77897 [shape=box,label="(77897)\n_hx_tmp = layoutGroup.startIndex != layoutGroup.endIndex"];
n77896 [shape=box,label="(77896)\nvar _hx_tmp = textIndex > formatRange.end\n@:cond-branch _hx_tmp"];
n77896 -> n78195[style="dashed",color="gray",label="then"];
n77896 -> n78196[style="dashed",color="gray",label="else"];
n77896 -> n78343[style="dashed",color="gray",label="next"];
n77895 [shape=box,label="(77895)\nvar _hx_tmp\nvar _hx_tmp = layoutGroup != null\n@:cond-branch _hx_tmp"];
n77895 -> n77897[style="dashed",color="gray",label="then"];
n77895 -> n77898[style="dashed",color="gray",label="else"];
n77895 -> n77899[style="dashed",color="gray",label="next"];
n77894 [shape=box,label="(77894)\n@:cond-branch _hx_tmp"];
n77894 -> n77895[style="dashed",color="gray",label="then"];
n77894 -> n77896[style="dashed",color="gray",label="else"];
n77894 -> n78382[style="dashed",color="gray",label="next"];
n77893 [shape=box,label="(77893)\n_hx_tmp = false"];
n77892 [shape=box,label="(77892)\n_hx_tmp = textIndex < formatRange.end"];
n77891 [shape=box,label="(77891)\n@:cond-branch _hx_tmp"];
n77891 -> n77892[style="dashed",color="gray",label="then"];
n77891 -> n77893[style="dashed",color="gray",label="else"];
n77891 -> n77894[style="dashed",color="gray",label="next"];
n77890 [shape=box,label="(77890)\n_hx_tmp = false"];
n77889 [shape=box,label="(77889)\n_hx_tmp = spaceIndex > -1"];
n77888 [shape=box,label="(77888)\ntextIndex = breakIndex + 1\nbreakIndex = this.getLineBreakIndex(textIndex)"];
n77887 [shape=box,label="(77887)\noffsetY = offsetY + maxHeightValue\nmaxAscent = 0.0\nmaxHeightValue = 0.0\nlineIndex = lineIndex + 1\noffsetX = 2"];
n77886 [shape=box,label="(77886)"];
n77885 [shape=box,label="(77885)\nlg.ascent = maxAscent\nlg.height = maxHeightValue"];
n77884 [shape=box,label="(77884)\nbreak"];
n77883 [shape=box,label="(77883)\nvar _hx_tmp = lg.lineIndex > lineIndex\n@:cond-branch _hx_tmp"];
n77883 -> n77884[style="dashed",color="gray",label="then"];
n77883 -> n77885[style="dashed",color="gray",label="next"];
n77882 [shape=box,label="(77882)\ncontinue"];
n77881 [shape=box,label="(77881)\nvar lg = cast `1.get(`)\n` = ` + 1\nvar _hx_tmp = lg.lineIndex < lineIndex\n@:cond-branch _hx_tmp"];
n77881 -> n77882[style="dashed",color="gray",label="then"];
n77881 -> n77883[style="dashed",color="gray",label="next"];
n77880 [shape=box,label="(77880)\nbreak"];
n77879 [shape=box,label="(77879)\nvar _hx_tmp = `1.get_length()\nvar _hx_tmp = ! ((` < _hx_tmp))\n@:cond-branch _hx_tmp"];
n77879 -> n77880[style="dashed",color="gray",label="then"];
n77879 -> n77881[style="dashed",color="gray",label="next"];
n77878 [shape=box,label="<loop-head>
(77878)"];
n77877 [shape=box,label="(77877)\nwhile ((true)) @:block 77879"];
n77877 -> n77878[style="dashed",color="gray",label="loop-head"];
n77877 -> n77879[style="dashed",color="gray",label="loop-body"];
n77877 -> n77886[style="dashed",color="gray",label="next"];
n77876 [shape=box,label="(77876)\nvar ` = 0\nvar `1 = `this.layoutGroups"];
n77876 -> n77877[style="dashed",color="gray",label="merge"];
n77875 [shape=box,label="(77875)"];
n77875 -> n77876[style="dashed",color="gray",label="sub"];
n77875 -> n77887[style="dashed",color="gray",label="next"];
n77874 [shape=box,label="(77874)\nmaxHeightValue = heightValue"];
n77873 [shape=box,label="(77873)\nvar _hx_tmp = heightValue > maxHeightValue\n@:cond-branch _hx_tmp"];
n77873 -> n77874[style="dashed",color="gray",label="then"];
n77873 -> n77875[style="dashed",color="gray",label="next"];
n77872 [shape=box,label="(77872)\nmaxAscent = ascent"];
n77871 [shape=box,label="(77871)\nvar _hx_tmp = ascent > maxAscent\n@:cond-branch _hx_tmp"];
n77871 -> n77872[style="dashed",color="gray",label="then"];
n77871 -> n77873[style="dashed",color="gray",label="next"];
n77870 [shape=box,label="(77870)"];
n77870 -> n77871[style="dashed",color="gray",label="sub"];
n77870 -> n77888[style="dashed",color="gray",label="next"];
n77869 [shape=box,label="(77869)\noffsetY = offsetY - maxHeightValue"];
n77868 [shape=box,label="(77868)\nvar _hx_tmp = lime.text._UTF8String.UTF8String_Impl_.get_length(this.text)\nvar _hx_tmp = _hx_tmp - 1\nvar _hx_tmp = breakIndex >= _hx_tmp\n@:cond-branch _hx_tmp"];
n77868 -> n77869[style="dashed",color="gray",label="then"];
n77868 -> n77870[style="dashed",color="gray",label="next"];
n77867 [shape=box,label="(77867)\nlineFormat = formatRange.format"];
n77866 [shape=box,label="(77866)"];
n77865 [shape=box,label="(77865)\nmaxAscent = ascent"];
n77864 [shape=box,label="(77864)\nvar _hx_tmp = ascent > maxAscent\n@:cond-branch _hx_tmp"];
n77864 -> n77865[style="dashed",color="gray",label="then"];
n77864 -> n77866[style="dashed",color="gray",label="next"];
n77863 [shape=box,label="(77863)\nmaxHeightValue = heightValue"];
n77862 [shape=box,label="(77862)\nvar _hx_tmp = heightValue > maxHeightValue\n@:cond-branch _hx_tmp"];
n77862 -> n77863[style="dashed",color="gray",label="then"];
n77862 -> n77864[style="dashed",color="gray",label="next"];
n77861 [shape=box,label="(77861)\nleading = currentFormat.leading\nvar heightValue = ascent + descent\nheightValue = heightValue + leading"];
n77860 [shape=box,label="(77860)"];
n77859 [shape=box,label="(77859)\nascent = currentFormat.size\ndescent = currentFormat.size * 0.185"];
n77858 [shape=box,label="(77858)\nvar ascent = font.ascender / font.unitsPerEM\nascent = ascent * currentFormat.size\nvar descent = font.descender / font.unitsPerEM\nvar descent = descent * currentFormat.size\ndescent = Math.abs(descent)"];
n77857 [shape=box,label="(77857)\nvar _hx_tmp = font != null\n@:cond-branch _hx_tmp"];
n77857 -> n77858[style="dashed",color="gray",label="then"];
n77857 -> n77859[style="dashed",color="gray",label="else"];
n77857 -> n77860[style="dashed",color="gray",label="next"];
n77856 [shape=box,label="(77856)\nascent = currentFormat.size * currentFormat.__ascent\ndescent = currentFormat.size * currentFormat.__descent"];
n77855 [shape=box,label="(77855)\nvar this = `this.textFormatRanges\nformatRange = cast this.get(rangeIndex)\ncurrentFormat.__merge(formatRange.format)\nfont = openfl._internal.text.TextEngine.getFontInstance(currentFormat)\nvar _hx_tmp = currentFormat.__ascent != null\n@:cond-branch _hx_tmp"];
n77855 -> n77856[style="dashed",color="gray",label="then"];
n77855 -> n77857[style="dashed",color="gray",label="else"];
n77855 -> n77861[style="dashed",color="gray",label="next"];
n77854 [shape=box,label="(77854)\nrangeIndex = rangeIndex + 1"];
n77853 [shape=box,label="(77853)"];
n77853 -> n77854[style="dashed",color="gray",label="sub"];
n77853 -> n77855[style="dashed",color="gray",label="next"];
n77852 [shape=box,label="(77852)\nvar this = `this.textFormatRanges\nvar _hx_tmp = cast this.get_length()\nvar _hx_tmp = _hx_tmp - 1\nvar _hx_tmp = rangeIndex < _hx_tmp\n@:cond-branch _hx_tmp"];
n77852 -> n77853[style="dashed",color="gray",label="then"];
n77852 -> n77862[style="dashed",color="gray",label="next"];
n77851 [shape=box,label="(77851)"];
n77851 -> n77852[style="dashed",color="gray",label="sub"];
n77851 -> n77867[style="dashed",color="gray",label="next"];
n77850 [shape=box,label="(77850)\nvar _hx_tmp = formatRange.end == breakIndex\n@:cond-branch _hx_tmp"];
n77850 -> n77851[style="dashed",color="gray",label="then"];
n77850 -> n77868[style="dashed",color="gray",label="next"];
n77849 [shape=box,label="(77849)"];
n77848 [shape=box,label="(77848)\nlayoutGroup = null"];
n77847 [shape=box,label="(77847)\nlayoutGroup.width = layoutGroup - _hx_tmp"];
n77846 [shape=box,label="(77846)\n_hx_tmp = 0"];
n77845 [shape=box,label="(77845)\n_hx_tmp = layoutGroup.positions[index].advance.x"];
n77844 [shape=box,label="(77844)\n@:cond-branch _hx_tmp"];
n77844 -> n77845[style="dashed",color="gray",label="then"];
n77844 -> n77846[style="dashed",color="gray",label="else"];
n77844 -> n77847[style="dashed",color="gray",label="next"];
n77843 [shape=box,label="(77843)\n_hx_tmp = false"];
n77842 [shape=box,label="(77842)\n_hx_tmp = index < layoutGroup.positions.length"];
n77841 [shape=box,label="(77841)\nvar layoutGroup = layoutGroup\nvar layoutGroup = layoutGroup.width\nvar index = layoutGroup.positions.length - 1\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp = index >= 0\n@:cond-branch _hx_tmp"];
n77841 -> n77842[style="dashed",color="gray",label="then"];
n77841 -> n77843[style="dashed",color="gray",label="else"];
n77841 -> n77844[style="dashed",color="gray",label="next"];
n77840 [shape=box,label="(77840)\nvar _hx_tmp = layoutGroup.endIndex == spaceIndex\n@:cond-branch _hx_tmp"];
n77840 -> n77841[style="dashed",color="gray",label="then"];
n77840 -> n77848[style="dashed",color="gray",label="next"];
n77839 [shape=box,label="(77839)\n@:cond-branch _hx_tmp"];
n77839 -> n77840[style="dashed",color="gray",label="then"];
n77839 -> n77849[style="dashed",color="gray",label="next"];
n77838 [shape=box,label="(77838)\n_hx_tmp = false"];
n77837 [shape=box,label="(77837)\n_hx_tmp = layoutGroup.startIndex != layoutGroup.endIndex"];
n77836 [shape=box,label="(77836)\nvar _hx_tmp = width\nlayoutGroup.width = _hx_tmp\nlayoutGroup.height = heightValue\nlayoutGroup = null"];
n77835 [shape=box,label="(77835)"];
n77834 [shape=box,label="(77834)\nvar position = positions[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n77833 [shape=box,label="(77833)\nbreak"];
n77832 [shape=box,label="(77832)\nvar _hx_tmp = ! ((` < positions.length))\n@:cond-branch _hx_tmp"];
n77832 -> n77833[style="dashed",color="gray",label="then"];
n77832 -> n77834[style="dashed",color="gray",label="next"];
n77831 [shape=box,label="<loop-head>
(77831)"];
n77830 [shape=box,label="(77830)\nwhile ((true)) @:block 77832"];
n77830 -> n77831[style="dashed",color="gray",label="loop-head"];
n77830 -> n77832[style="dashed",color="gray",label="loop-body"];
n77830 -> n77835[style="dashed",color="gray",label="next"];
n77829 [shape=box,label="(77829)\nvar ` = 0"];
n77829 -> n77830[style="dashed",color="gray",label="merge"];
n77828 [shape=box,label="(77828)\nvar `this = `this.__textLayout\nvar _hx_tmp = lime.text._UTF8String.UTF8String_Impl_.substring(text, textIndex, breakIndex)\n`this.set_text(_hx_tmp)\nvar _hx_tmp = `this.__textLayout.get_positions()\nlayoutGroup.positions = _hx_tmp\nlayoutGroup.offsetX = offsetX\nlayoutGroup.ascent = ascent\nlayoutGroup.descent = descent\nlayoutGroup.leading = leading\nlayoutGroup.lineIndex = lineIndex\nlayoutGroup.offsetY = offsetY\nvar positions = layoutGroup.positions\nvar width = 0.0"];
n77828 -> n77829[style="dashed",color="gray",label="sub"];
n77828 -> n77836[style="dashed",color="gray",label="next"];
n77827 [shape=box,label="(77827)\n`this.__textLayout.set_size(formatRange.format.size)"];
n77826 [shape=box,label="(77826)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar _hx_tmp = formatRange.format.size != null\n@:cond-branch _hx_tmp"];
n77826 -> n77827[style="dashed",color="gray",label="then"];
n77826 -> n77828[style="dashed",color="gray",label="next"];
n77825 [shape=box,label="(77825)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n77824 [shape=box,label="(77824)\nvar text = this.text\nvar _hx_tmp = `this.__textLayout == null\n@:cond-branch _hx_tmp"];
n77824 -> n77825[style="dashed",color="gray",label="then"];
n77824 -> n77826[style="dashed",color="gray",label="next"];
n77823 [shape=box,label="(77823)"];
n77822 [shape=box,label="(77822)\nvar this = `this.layoutGroups\ncast this.push(layoutGroup)"];
n77821 [shape=box,label="(77821)\nlayoutGroup.format = formatRange.format\nlayoutGroup.startIndex = textIndex\nlayoutGroup.endIndex = breakIndex"];
n77820 [shape=box,label="(77820)\nlayoutGroup = new openfl._internal.text.TextLayoutGroup(formatRange.format, textIndex, breakIndex)"];
n77820 -> n77822[style="dashed",color="gray",label="sub"];
n77820 -> n77823[style="dashed",color="gray",label="next"];
n77819 [shape=box,label="(77819)\n@:cond-branch _hx_tmp"];
n77819 -> n77820[style="dashed",color="gray",label="then"];
n77819 -> n77821[style="dashed",color="gray",label="else"];
n77819 -> n77824[style="dashed",color="gray",label="next"];
n77818 [shape=box,label="(77818)\n_hx_tmp = true"];
n77817 [shape=box,label="(77817)\n_hx_tmp = layoutGroup.startIndex != layoutGroup.endIndex"];
n77816 [shape=box,label="(77816)\nvar _hx_tmp\nvar _hx_tmp = ! layoutGroup == null\n@:cond-branch _hx_tmp"];
n77816 -> n77817[style="dashed",color="gray",label="then"];
n77816 -> n77818[style="dashed",color="gray",label="else"];
n77816 -> n77819[style="dashed",color="gray",label="next"];
n77815 [shape=box,label="(77815)"];
n77814 [shape=box,label="(77814)"];
n77813 [shape=box,label="(77813)\nwidthValue = width\ntempWidth = widthValue"];
n77812 [shape=box,label="(77812)"];
n77811 [shape=box,label="(77811)\nvar position = positions[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n77810 [shape=box,label="(77810)\nbreak"];
n77809 [shape=box,label="(77809)\nvar widthValue = ! ((` < positions.length))\n@:cond-branch widthValue"];
n77809 -> n77810[style="dashed",color="gray",label="then"];
n77809 -> n77811[style="dashed",color="gray",label="next"];
n77808 [shape=box,label="<loop-head>
(77808)"];
n77807 [shape=box,label="(77807)\nwhile ((true)) @:block 77809"];
n77807 -> n77808[style="dashed",color="gray",label="loop-head"];
n77807 -> n77809[style="dashed",color="gray",label="loop-body"];
n77807 -> n77812[style="dashed",color="gray",label="next"];
n77806 [shape=box,label="(77806)\nvar ` = 0"];
n77806 -> n77807[style="dashed",color="gray",label="merge"];
n77805 [shape=box,label="(77805)\nvar `this = `this.__textLayout\nvar positions = lime.text._UTF8String.UTF8String_Impl_.substring(text, textIndex, breakIndex)\n`this.set_text(positions)\npositions = `this.__textLayout.get_positions()\nvar width = 0.0"];
n77805 -> n77806[style="dashed",color="gray",label="sub"];
n77805 -> n77813[style="dashed",color="gray",label="next"];
n77804 [shape=box,label="(77804)\n`this.__textLayout.set_size(formatRange.format.size)"];
n77803 [shape=box,label="(77803)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar positions = formatRange.format.size != null\n@:cond-branch positions"];
n77803 -> n77804[style="dashed",color="gray",label="then"];
n77803 -> n77805[style="dashed",color="gray",label="next"];
n77802 [shape=box,label="(77802)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n77801 [shape=box,label="(77801)\ntextIndex = textIndex + i\nvar text = `this.text\nvar positions = `this.__textLayout == null\n@:cond-branch positions"];
n77801 -> n77802[style="dashed",color="gray",label="then"];
n77801 -> n77803[style="dashed",color="gray",label="next"];
n77800 [shape=box,label="(77800)\noffsetY = offsetY + maxHeightValue\nmaxAscent = 0.0\nmaxHeightValue = 0.0\nlineIndex = lineIndex + 1\noffsetX = 2"];
n77799 [shape=box,label="(77799)"];
n77798 [shape=box,label="(77798)\nlg.ascent = maxAscent\nlg.height = maxHeightValue"];
n77797 [shape=box,label="(77797)\nbreak"];
n77796 [shape=box,label="(77796)\nvar _hx_tmp = lg.lineIndex > lineIndex\n@:cond-branch _hx_tmp"];
n77796 -> n77797[style="dashed",color="gray",label="then"];
n77796 -> n77798[style="dashed",color="gray",label="next"];
n77795 [shape=box,label="(77795)\ncontinue"];
n77794 [shape=box,label="(77794)\nvar lg = cast `1.get(`)\n` = ` + 1\nvar _hx_tmp = lg.lineIndex < lineIndex\n@:cond-branch _hx_tmp"];
n77794 -> n77795[style="dashed",color="gray",label="then"];
n77794 -> n77796[style="dashed",color="gray",label="next"];
n77793 [shape=box,label="(77793)\nbreak"];
n77792 [shape=box,label="(77792)\nvar _hx_tmp = `1.get_length()\nvar _hx_tmp = ! ((` < _hx_tmp))\n@:cond-branch _hx_tmp"];
n77792 -> n77793[style="dashed",color="gray",label="then"];
n77792 -> n77794[style="dashed",color="gray",label="next"];
n77791 [shape=box,label="<loop-head>
(77791)"];
n77790 [shape=box,label="(77790)\nwhile ((true)) @:block 77792"];
n77790 -> n77791[style="dashed",color="gray",label="loop-head"];
n77790 -> n77792[style="dashed",color="gray",label="loop-body"];
n77790 -> n77799[style="dashed",color="gray",label="next"];
n77789 [shape=box,label="(77789)\nvar ` = 0\nvar `1 = `this.layoutGroups"];
n77789 -> n77790[style="dashed",color="gray",label="merge"];
n77788 [shape=box,label="(77788)"];
n77788 -> n77789[style="dashed",color="gray",label="sub"];
n77788 -> n77800[style="dashed",color="gray",label="next"];
n77787 [shape=box,label="(77787)\nmaxHeightValue = heightValue"];
n77786 [shape=box,label="(77786)\nvar _hx_tmp = heightValue > maxHeightValue\n@:cond-branch _hx_tmp"];
n77786 -> n77787[style="dashed",color="gray",label="then"];
n77786 -> n77788[style="dashed",color="gray",label="next"];
n77785 [shape=box,label="(77785)\nmaxAscent = ascent"];
n77784 [shape=box,label="(77784)\nvar _hx_tmp = ascent > maxAscent\n@:cond-branch _hx_tmp"];
n77784 -> n77785[style="dashed",color="gray",label="then"];
n77784 -> n77786[style="dashed",color="gray",label="next"];
n77783 [shape=box,label="(77783)\nvar _hx_tmp = width\nlayoutGroup.width = _hx_tmp\nlayoutGroup.height = heightValue\nlayoutGroup = null"];
n77783 -> n77784[style="dashed",color="gray",label="sub"];
n77783 -> n77801[style="dashed",color="gray",label="next"];
n77782 [shape=box,label="(77782)"];
n77781 [shape=box,label="(77781)\nvar position = positions[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n77780 [shape=box,label="(77780)\nbreak"];
n77779 [shape=box,label="(77779)\nvar _hx_tmp = ! ((` < positions.length))\n@:cond-branch _hx_tmp"];
n77779 -> n77780[style="dashed",color="gray",label="then"];
n77779 -> n77781[style="dashed",color="gray",label="next"];
n77778 [shape=box,label="<loop-head>
(77778)"];
n77777 [shape=box,label="(77777)\nwhile ((true)) @:block 77779"];
n77777 -> n77778[style="dashed",color="gray",label="loop-head"];
n77777 -> n77779[style="dashed",color="gray",label="loop-body"];
n77777 -> n77782[style="dashed",color="gray",label="next"];
n77776 [shape=box,label="(77776)\nvar ` = 0"];
n77776 -> n77777[style="dashed",color="gray",label="merge"];
n77775 [shape=box,label="(77775)\nvar `this = `this.__textLayout\nvar _hx_tmp = textIndex + i\nvar _hx_tmp = lime.text._UTF8String.UTF8String_Impl_.substring(text, textIndex, _hx_tmp)\n`this.set_text(_hx_tmp)\nvar _hx_tmp = `this.__textLayout.get_positions()\nlayoutGroup.positions = _hx_tmp\nlayoutGroup.offsetX = offsetX\nlayoutGroup.ascent = ascent\nlayoutGroup.descent = descent\nlayoutGroup.leading = leading\nlayoutGroup.lineIndex = lineIndex\nlayoutGroup.offsetY = offsetY\nvar positions = layoutGroup.positions\nvar width = 0.0"];
n77775 -> n77776[style="dashed",color="gray",label="sub"];
n77775 -> n77783[style="dashed",color="gray",label="next"];
n77774 [shape=box,label="(77774)\n`this.__textLayout.set_size(formatRange.format.size)"];
n77773 [shape=box,label="(77773)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar _hx_tmp = formatRange.format.size != null\n@:cond-branch _hx_tmp"];
n77773 -> n77774[style="dashed",color="gray",label="then"];
n77773 -> n77775[style="dashed",color="gray",label="next"];
n77772 [shape=box,label="(77772)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n77771 [shape=box,label="(77771)\nvar text = `this.text\nvar _hx_tmp = `this.__textLayout == null\n@:cond-branch _hx_tmp"];
n77771 -> n77772[style="dashed",color="gray",label="then"];
n77771 -> n77773[style="dashed",color="gray",label="next"];
n77770 [shape=box,label="(77770)"];
n77769 [shape=box,label="(77769)"];
n77768 [shape=box,label="(77768)\nvar this = `this.layoutGroups\ncast this.push(layoutGroup)"];
n77767 [shape=box,label="(77767)\nlayoutGroup.format = formatRange.format\nlayoutGroup.startIndex = textIndex\nlayoutGroup.endIndex = endIndex"];
n77766 [shape=box,label="(77766)\nlayoutGroup = new openfl._internal.text.TextLayoutGroup(formatRange.format, textIndex, endIndex)"];
n77766 -> n77768[style="dashed",color="gray",label="sub"];
n77766 -> n77769[style="dashed",color="gray",label="next"];
n77765 [shape=box,label="(77765)\n@:cond-branch _hx_tmp"];
n77765 -> n77766[style="dashed",color="gray",label="then"];
n77765 -> n77767[style="dashed",color="gray",label="else"];
n77765 -> n77770[style="dashed",color="gray",label="next"];
n77764 [shape=box,label="(77764)\n_hx_tmp = true"];
n77763 [shape=box,label="(77763)\n_hx_tmp = layoutGroup.startIndex != layoutGroup.endIndex"];
n77762 [shape=box,label="(77762)\nvar endIndex = textIndex + i\nvar _hx_tmp\nvar _hx_tmp = ! layoutGroup == null\n@:cond-branch _hx_tmp"];
n77762 -> n77763[style="dashed",color="gray",label="then"];
n77762 -> n77764[style="dashed",color="gray",label="else"];
n77762 -> n77765[style="dashed",color="gray",label="next"];
n77761 [shape=box,label="(77761)"];
n77761 -> n77762[style="dashed",color="gray",label="sub"];
n77761 -> n77771[style="dashed",color="gray",label="next"];
n77760 [shape=box,label="(77760)\noffsetX = 2\noffsetY = offsetY + layoutGroup.height\nlineIndex = lineIndex + 1\nbreak"];
n77759 [shape=box,label="(77759)\nvar _hx_tmp = i == 0\n@:cond-branch _hx_tmp"];
n77759 -> n77760[style="dashed",color="gray",label="then"];
n77759 -> n77761[style="dashed",color="gray",label="else"];
n77759 -> n77814[style="dashed",color="gray",label="next"];
n77758 [shape=box,label="(77758)\ni = lime.text._UTF8String.UTF8String_Impl_.get_length(`this.text)"];
n77757 [shape=box,label="(77757)\n@:cond-branch _hx_tmp"];
n77757 -> n77758[style="dashed",color="gray",label="then"];
n77757 -> n77759[style="dashed",color="gray",label="next"];
n77756 [shape=box,label="(77756)\n_hx_tmp = false"];
n77755 [shape=box,label="(77755)\nvar _hx_tmp = `this.width - 4\n_hx_tmp = tempWidth > _hx_tmp"];
n77754 [shape=box,label="(77754)\nvar _hx_tmp\nvar _hx_tmp = i == 0\n@:cond-branch _hx_tmp"];
n77754 -> n77755[style="dashed",color="gray",label="then"];
n77754 -> n77756[style="dashed",color="gray",label="else"];
n77754 -> n77757[style="dashed",color="gray",label="next"];
n77753 [shape=box,label="(77753)"];
n77752 [shape=box,label="(77752)\ni = i + 1"];
n77751 [shape=box,label="(77751)"];
n77751 -> n77752[style="dashed",color="gray",label="sub"];
n77751 -> n77753[style="dashed",color="gray",label="next"];
n77750 [shape=box,label="(77750)\nbreak"];
n77749 [shape=box,label="(77749)\ni = i - 1"];
n77748 [shape=box,label="(77748)"];
n77748 -> n77749[style="dashed",color="gray",label="sub"];
n77748 -> n77750[style="dashed",color="gray",label="next"];
n77747 [shape=box,label="(77747)\ntempWidth = width\nvar _hx_tmp = offsetX + tempWidth\nvar _hx_tmp = `this.width - 2\nvar _hx_tmp = _hx_tmp > _hx_tmp\n@:cond-branch _hx_tmp"];
n77747 -> n77748[style="dashed",color="gray",label="then"];
n77747 -> n77751[style="dashed",color="gray",label="next"];
n77746 [shape=box,label="(77746)"];
n77745 [shape=box,label="(77745)\nvar position = `1[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n77744 [shape=box,label="(77744)\nbreak"];
n77743 [shape=box,label="(77743)\nvar tempWidth = ! ((` < `1.length))\n@:cond-branch tempWidth"];
n77743 -> n77744[style="dashed",color="gray",label="then"];
n77743 -> n77745[style="dashed",color="gray",label="next"];
n77742 [shape=box,label="<loop-head>
(77742)"];
n77741 [shape=box,label="(77741)\nwhile ((true)) @:block 77743"];
n77741 -> n77742[style="dashed",color="gray",label="loop-head"];
n77741 -> n77743[style="dashed",color="gray",label="loop-body"];
n77741 -> n77746[style="dashed",color="gray",label="next"];
n77740 [shape=box,label="(77740)\nvar ` = 0\nvar `1 = `this.__textLayout.get_positions()"];
n77740 -> n77741[style="dashed",color="gray",label="merge"];
n77739 [shape=box,label="(77739)\n`this.__textLayout.set_text(text)"];
n77739 -> n77740[style="dashed",color="gray",label="sub"];
n77739 -> n77747[style="dashed",color="gray",label="next"];
n77738 [shape=box,label="(77738)\n`this.__textLayout.set_size(formatRange.format.size)"];
n77737 [shape=box,label="(77737)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar tempWidth = formatRange.format.size != null\n@:cond-branch tempWidth"];
n77737 -> n77738[style="dashed",color="gray",label="then"];
n77737 -> n77739[style="dashed",color="gray",label="next"];
n77736 [shape=box,label="(77736)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n77735 [shape=box,label="(77735)\nvar text = lime.text._UTF8String.UTF8String_Impl_.substr(`this.text, textIndex, i)\nvar tempWidth = `this.__textLayout == null\n@:cond-branch tempWidth"];
n77735 -> n77736[style="dashed",color="gray",label="then"];
n77735 -> n77737[style="dashed",color="gray",label="next"];
n77734 [shape=box,label="(77734)\nbreak"];
n77733 [shape=box,label="(77733)\nvar _hx_tmp = textIndex + i\nvar _hx_tmp = breakIndex + 1\nvar _hx_tmp = ! ((_hx_tmp < _hx_tmp))\n@:cond-branch _hx_tmp"];
n77733 -> n77734[style="dashed",color="gray",label="then"];
n77733 -> n77735[style="dashed",color="gray",label="next"];
n77732 [shape=box,label="<loop-head>
(77732)"];
n77731 [shape=box,label="(77731)\nwhile ((true)) @:block 77733"];
n77731 -> n77732[style="dashed",color="gray",label="loop-head"];
n77731 -> n77733[style="dashed",color="gray",label="loop-body"];
n77731 -> n77754[style="dashed",color="gray",label="next"];
n77730 [shape=box,label="(77730)\nvar i = 1"];
n77730 -> n77731[style="dashed",color="gray",label="merge"];
n77729 [shape=box,label="(77729)\nbreak"];
n77728 [shape=box,label="(77728)\nvar _hx_tmp = offsetX + tempWidth\nvar _hx_tmp = `this.width - 2\nvar _hx_tmp = ! ((_hx_tmp > _hx_tmp))\n@:cond-branch _hx_tmp"];
n77728 -> n77729[style="dashed",color="gray",label="then"];
n77728 -> n77730[style="dashed",color="gray",label="next"];
n77727 [shape=box,label="<loop-head>
(77727)"];
n77726 [shape=box,label="(77726)\nwhile ((true)) @:block 77728"];
n77726 -> n77727[style="dashed",color="gray",label="loop-head"];
n77726 -> n77728[style="dashed",color="gray",label="loop-body"];
n77726 -> n77815[style="dashed",color="gray",label="next"];
n77725 [shape=box,label="(77725)\nvar tempWidth = width"];
n77725 -> n77726[style="dashed",color="gray",label="merge"];
n77724 [shape=box,label="(77724)"];
n77723 [shape=box,label="(77723)\nvar position = `1[`]\n` = ` + 1\nwidth = width + position.advance.x"];
n77722 [shape=box,label="(77722)\nbreak"];
n77721 [shape=box,label="(77721)\nvar _hx_tmp = ! ((` < `1.length))\n@:cond-branch _hx_tmp"];
n77721 -> n77722[style="dashed",color="gray",label="then"];
n77721 -> n77723[style="dashed",color="gray",label="next"];
n77720 [shape=box,label="<loop-head>
(77720)"];
n77719 [shape=box,label="(77719)\nwhile ((true)) @:block 77721"];
n77719 -> n77720[style="dashed",color="gray",label="loop-head"];
n77719 -> n77721[style="dashed",color="gray",label="loop-body"];
n77719 -> n77724[style="dashed",color="gray",label="next"];
n77718 [shape=box,label="(77718)\nvar ` = 0\nvar `1 = `this.__textLayout.get_positions()"];
n77718 -> n77719[style="dashed",color="gray",label="merge"];
n77717 [shape=box,label="(77717)\n`this.__textLayout.set_text(text)"];
n77717 -> n77718[style="dashed",color="gray",label="sub"];
n77717 -> n77725[style="dashed",color="gray",label="next"];
n77716 [shape=box,label="(77716)\n`this.__textLayout.set_size(formatRange.format.size)"];
n77715 [shape=box,label="(77715)\nvar width = 0.0\n`this.__textLayout.set_text(null)\n`this.__textLayout.set_font(font)\nvar _hx_tmp = formatRange.format.size != null\n@:cond-branch _hx_tmp"];
n77715 -> n77716[style="dashed",color="gray",label="then"];
n77715 -> n77717[style="dashed",color="gray",label="next"];
n77714 [shape=box,label="(77714)\n`this.__textLayout = new lime.text.TextLayout(null, null, null, null, null, null)"];
n77713 [shape=box,label="(77713)\nvar text = lime.text._UTF8String.UTF8String_Impl_.substring(`this.text, textIndex, breakIndex)\nvar _hx_tmp = `this.__textLayout == null\n@:cond-branch _hx_tmp"];
n77713 -> n77714[style="dashed",color="gray",label="then"];
n77713 -> n77715[style="dashed",color="gray",label="next"];
n77712 [shape=box,label="(77712)\n@:cond-branch _hx_tmp"];
n77712 -> n77713[style="dashed",color="gray",label="then"];
n77712 -> n77816[style="dashed",color="gray",label="next"];
n77711 [shape=box,label="(77711)\n_hx_tmp = false"];
n77710 [shape=box,label="(77710)\n_hx_tmp = this.width >= 4"];
n77709 [shape=box,label="(77709)\n@:cond-branch _hx_tmp"];
n77709 -> n77710[style="dashed",color="gray",label="then"];
n77709 -> n77711[style="dashed",color="gray",label="else"];
n77709 -> n77712[style="dashed",color="gray",label="next"];
n77708 [shape=box,label="(77708)\n_hx_tmp = false"];
n77707 [shape=box,label="(77707)\n_hx_tmp = previousSpaceIndex <= textIndex"];
n77706 [shape=box,label="(77706)\nvar _hx_tmp\nvar _hx_tmp = layoutGroup != null\n@:cond-branch _hx_tmp"];
n77706 -> n77837[style="dashed",color="gray",label="then"];
n77706 -> n77838[style="dashed",color="gray",label="else"];
n77706 -> n77839[style="dashed",color="gray",label="next"];
n77705 [shape=box,label="(77705)\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp = this.wordWrap\n@:cond-branch _hx_tmp"];
n77705 -> n77707[style="dashed",color="gray",label="then"];
n77705 -> n77708[style="dashed",color="gray",label="else"];
n77705 -> n77709[style="dashed",color="gray",label="next"];
n77704 [shape=box,label="(77704)\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp = formatRange.end >= spaceIndex\n@:cond-branch _hx_tmp"];
n77704 -> n77889[style="dashed",color="gray",label="then"];
n77704 -> n77890[style="dashed",color="gray",label="else"];
n77704 -> n77891[style="dashed",color="gray",label="next"];
n77703 [shape=box,label="(77703)\nvar _hx_tmp = textIndex <= breakIndex\n@:cond-branch _hx_tmp"];
n77703 -> n77705[style="dashed",color="gray",label="then"];
n77703 -> n77706[style="dashed",color="gray",label="else"];
n77703 -> n77850[style="dashed",color="gray",label="next"];
n77702 [shape=box,label="(77702)\n@:cond-branch _hx_tmp"];
n77702 -> n77703[style="dashed",color="gray",label="then"];
n77702 -> n77704[style="dashed",color="gray",label="else"];
n77702 -> n78383[style="dashed",color="gray",label="next"];
n77701 [shape=box,label="(77701)\n_hx_tmp = false"];
n77700 [shape=box,label="(77700)\n_hx_tmp = formatRange.end >= breakIndex"];
n77699 [shape=box,label="(77699)\n@:cond-branch _hx_tmp"];
n77699 -> n77700[style="dashed",color="gray",label="then"];
n77699 -> n77701[style="dashed",color="gray",label="else"];
n77699 -> n77702[style="dashed",color="gray",label="next"];
n77698 [shape=box,label="(77698)"];
n77697 [shape=box,label="(77697)\n_hx_tmp = true"];
n77696 [shape=box,label="(77696)\n_hx_tmp = breakIndex < spaceIndex"];
n77695 [shape=box,label="(77695)\n_hx_tmp = false"];
n77694 [shape=box,label="(77694)\nvar _hx_tmp = ! spaceIndex == -1\n@:cond-branch _hx_tmp"];
n77694 -> n77696[style="dashed",color="gray",label="then"];
n77694 -> n77697[style="dashed",color="gray",label="else"];
n77694 -> n77698[style="dashed",color="gray",label="next"];
n77693 [shape=box,label="(77693)\nvar _hx_tmp\nvar _hx_tmp\nvar _hx_tmp = breakIndex > -1\n@:cond-branch _hx_tmp"];
n77693 -> n77694[style="dashed",color="gray",label="then"];
n77693 -> n77695[style="dashed",color="gray",label="else"];
n77693 -> n77699[style="dashed",color="gray",label="next"];
n77692 [shape=box,label="(77692)\nbreak"];
n77691 [shape=box,label="(77691)\nvar _hx_tmp = ! ((textIndex < maxLoops))\n@:cond-branch _hx_tmp"];
n77691 -> n77692[style="dashed",color="gray",label="then"];
n77691 -> n77693[style="dashed",color="gray",label="next"];
n77690 [shape=box,label="<loop-head>
(77690)"];
n77689 [shape=box,label="(77689)\nwhile ((true)) @:block 77691"];
n77689 -> n77690[style="dashed",color="gray",label="loop-head"];
n77689 -> n77691[style="dashed",color="gray",label="loop-body"];
n77689 -> n78384[style="dashed",color="gray",label="next"];
n77688 [shape=box,label="(77688)\nlineFormat = formatRange.format\nvar wrap\nvar maxLoops = lime.text._UTF8String.UTF8String_Impl_.get_length(this.text)\nvar maxLoops = maxLoops + 1"];
n77688 -> n77689[style="dashed",color="gray",label="merge"];
n77687 [shape=box,label="(77687)"];
n77686 [shape=box,label="(77686)\nmaxAscent = ascent"];
n77685 [shape=box,label="(77685)\nvar _hx_tmp = ascent > maxAscent\n@:cond-branch _hx_tmp"];
n77685 -> n77686[style="dashed",color="gray",label="then"];
n77685 -> n77687[style="dashed",color="gray",label="next"];
n77684 [shape=box,label="(77684)\nmaxHeightValue = heightValue"];
n77683 [shape=box,label="(77683)\nvar _hx_tmp = heightValue > maxHeightValue\n@:cond-branch _hx_tmp"];
n77683 -> n77684[style="dashed",color="gray",label="then"];
n77683 -> n77685[style="dashed",color="gray",label="next"];
n77682 [shape=box,label="(77682)\nleading = currentFormat.leading\nvar heightValue = ascent + descent\nheightValue = heightValue + leading"];
n77681 [shape=box,label="(77681)"];
n77680 [shape=box,label="(77680)\nascent = currentFormat.size\ndescent = currentFormat.size * 0.185"];
n77679 [shape=box,label="(77679)\nvar ascent = font.ascender / font.unitsPerEM\nascent = ascent * currentFormat.size\nvar descent = font.descender / font.unitsPerEM\nvar descent = descent * currentFormat.size\ndescent = Math.abs(descent)"];
n77678 [shape=box,label="(77678)\nvar _hx_tmp = font != null\n@:cond-branch _hx_tmp"];
n77678 -> n77679[style="dashed",color="gray",label="then"];
n77678 -> n77680[style="dashed",color="gray",label="else"];
n77678 -> n77681[style="dashed",color="gray",label="next"];
n77677 [shape=box,label="(77677)\nascent = currentFormat.size * currentFormat.__ascent\ndescent = currentFormat.size * currentFormat.__descent"];
n77676 [shape=box,label="(77676)\nvar this = `this.textFormatRanges\nformatRange = cast this.get(rangeIndex)\ncurrentFormat.__merge(formatRange.format)\nfont = openfl._internal.text.TextEngine.getFontInstance(currentFormat)\nvar _hx_tmp = currentFormat.__ascent != null\n@:cond-branch _hx_tmp"];
n77676 -> n77677[style="dashed",color="gray",label="then"];
n77676 -> n77678[style="dashed",color="gray",label="else"];
n77676 -> n77682[style="dashed",color="gray",label="next"];
n77675 [shape=box,label="(77675)\nrangeIndex = rangeIndex + 1"];
n77674 [shape=box,label="(77674)"];
n77674 -> n77675[style="dashed",color="gray",label="sub"];
n77674 -> n77676[style="dashed",color="gray",label="next"];
n77673 [shape=box,label="(77673)\nvar this = `this.textFormatRanges\nvar _hx_tmp = cast this.get_length()\nvar _hx_tmp = _hx_tmp - 1\nvar _hx_tmp = rangeIndex < _hx_tmp\n@:cond-branch _hx_tmp"];
n77673 -> n77674[style="dashed",color="gray",label="then"];
n77673 -> n77683[style="dashed",color="gray",label="next"];
n77672 [shape=box,label="(77672)\nvar rangeIndex = -1\nvar formatRange = null\nvar font = null\nvar currentFormat = openfl.text.TextField.__defaultTextFormat.clone()\nvar leading = 0\nvar ascent = 0.0\nvar maxAscent = 0.0\nvar descent = 0.0\nvar layoutGroup = null\nvar positions = null\nvar widthValue = 0.0\nvar heightValue = 0.0\nvar maxHeightValue = 0.0\nvar previousSpaceIndex = -2\nvar spaceIndex = lime.text._UTF8String.UTF8String_Impl_.indexOf(this.text, \" \", null)\nvar breakIndex = this.getLineBreakIndex(null)\nvar offsetX = 2.0\nvar offsetY = 2.0\nvar textIndex = 0\nvar lineIndex = 0\nvar lineFormat = null"];
n77672 -> n77673[style="dashed",color="gray",label="sub"];
n77672 -> n77688[style="dashed",color="gray",label="next"];
n77671 [shape=box,label="(77671)\nreturn"];
n77670 [shape=box,label="(77670)\n@:cond-branch _hx_tmp"];
n77670 -> n77671[style="dashed",color="gray",label="then"];
n77670 -> n77672[style="dashed",color="gray",label="next"];
n77669 [shape=box,label="(77669)\n_hx_tmp = true"];
n77668 [shape=box,label="(77668)\n_hx_tmp = lime.text._UTF8String.UTF8String_Impl_.equals(this.text, \"\")"];
n77667 [shape=box,label="(77667)\nvar _hx_tmp\nvar _hx_tmp = ! this.text == null\n@:cond-branch _hx_tmp"];
n77667 -> n77668[style="dashed",color="gray",label="then"];
n77667 -> n77669[style="dashed",color="gray",label="else"];
n77667 -> n77670[style="dashed",color="gray",label="next"];
n77666 [shape=box,label="(77666)\nvar this = this.layoutGroups\ncast this.set_length(0)"];
n77665 [shape=box,label="<function-end>
(77665)"];
n77664 [shape=box,label="<function-begin>
(77664)\nvar `this = this"];
n77664 -> n77666[style="dashed",color="gray",label="sub"];
n77664 -> n77667[style="dashed",color="gray",label="next"];
n1 [shape=box,label="<root>
(1)"];
}
